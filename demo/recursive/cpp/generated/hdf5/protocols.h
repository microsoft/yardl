// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../yardl/detail/hdf5/io.h"

namespace sketch::hdf5 {
// HDF5 writer for the MyProtocol protocol.
class MyProtocolWriter : public sketch::MyProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  MyProtocolWriter(std::string path);

  protected:
  void WriteTreeImpl(sketch::BinaryTree const& value) override;

  void WritePtreeImpl(std::unique_ptr<sketch::BinaryTree> const& value) override;

  void WriteTreesImpl(sketch::BinaryTree const& value) override;

  void WriteTreesImpl(std::vector<sketch::BinaryTree> const& values) override;

  void EndTreesImpl() override;

  void WritePtreesImpl(std::unique_ptr<sketch::BinaryTree> const& value) override;

  void WritePtreesImpl(std::vector<std::unique_ptr<sketch::BinaryTree>> const& values) override;

  void EndPtreesImpl() override;

  void WriteListImpl(sketch::LinkedList<int32_t> const& value) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> trees_dataset_state_;
  std::unique_ptr<yardl::hdf5::DatasetWriter> ptrees_dataset_state_;
};

// HDF5 reader for the MyProtocol protocol.
class MyProtocolReader : public sketch::MyProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  MyProtocolReader(std::string path);

  void ReadTreeImpl(sketch::BinaryTree& value) override;

  void ReadPtreeImpl(std::unique_ptr<sketch::BinaryTree>& value) override;

  bool ReadTreesImpl(sketch::BinaryTree& value) override;

  bool ReadTreesImpl(std::vector<sketch::BinaryTree>& values) override;

  bool ReadPtreesImpl(std::unique_ptr<sketch::BinaryTree>& value) override;

  bool ReadPtreesImpl(std::vector<std::unique_ptr<sketch::BinaryTree>>& values) override;

  void ReadListImpl(sketch::LinkedList<int32_t>& value) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> trees_dataset_state_;
  std::unique_ptr<yardl::hdf5::DatasetReader> ptrees_dataset_state_;
};

} // namespace sketch

