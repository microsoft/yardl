// This file was generated by the "yardl" tool. DO NOT EDIT.

#include "protocols.h"

#include "../yardl/detail/hdf5/io.h"
#include "../yardl/detail/hdf5/ddl.h"
#include "../yardl/detail/hdf5/inner_types.h"

namespace {
template <typename TInner0, typename TOuter0, typename TInner1, typename TOuter1>
class InnerUnion2 {
  public:
  InnerUnion2() : type_index_(-1) {} 
  InnerUnion2(std::variant<TOuter0, TOuter1> const& v) : type_index_(static_cast<int8_t>(v.index())) {
    Init(v);
  }

  InnerUnion2(std::variant<std::monostate, TOuter0, TOuter1> const& v) : type_index_(static_cast<int8_t>(v.index()) - 1) {
    Init(v);
  }

  InnerUnion2(InnerUnion2 const& v) = delete;

  InnerUnion2 operator=(InnerUnion2 const&) = delete;

  ~InnerUnion2() {
    switch (type_index_) {
    case 0:
      value0_.~TInner0();
      break;
    case 1:
      value1_.~TInner1();
      break;
    }
  }

  void ToOuter(std::variant<TOuter0, TOuter1>& o) const {
    ToOuterImpl(o);
  }

  void ToOuter(std::variant<std::monostate, TOuter0, TOuter1>& o) const {
    ToOuterImpl(o);
  }

  int8_t type_index_;
  union {
    char empty0_[sizeof(TInner0)]{};
    TInner0 value0_;
  };
  union {
    char empty1_[sizeof(TInner1)]{};
    TInner1 value1_;
  };

  private:
  template <typename T>
  void Init(T const& v) {
    constexpr size_t offset = GetOuterVariantOffset<std::remove_const_t<std::remove_reference_t<decltype(v)>>>();
    switch (type_index_) {
    case 0:
      new (&value0_) TInner0(std::get<0 + offset>(v));
      return;
    case 1:
      new (&value1_) TInner1(std::get<1 + offset>(v));
      return;
    }
  }

  template <typename TVariant>
  void ToOuterImpl(TVariant& o) const {
    constexpr size_t offset = GetOuterVariantOffset<TVariant>();
    switch (type_index_) {
    case -1:
      if constexpr (offset == 1) {
        o.template emplace<0>(std::monostate{});
        return;
      }
    case 0:
      o.template emplace<0 + offset>();
      yardl::hdf5::ToOuter(value0_, std::get<0 + offset>(o));
      return;
    case 1:
      o.template emplace<1 + offset>();
      yardl::hdf5::ToOuter(value1_, std::get<1 + offset>(o));
      return;
    }
    throw std::runtime_error("unrecognized type variant type index " + std::to_string(type_index_));
  }

  template <typename TVariant>
  static constexpr size_t GetOuterVariantOffset() {
    constexpr bool has_monostate = std::is_same_v<std::monostate, std::variant_alternative_t<0, TVariant>>;
    if constexpr (has_monostate) {
      return 1;
    }
      return 0;
  }
};

template <typename TInner0, typename TOuter0, typename TInner1, typename TOuter1>
H5::CompType InnerUnion2Ddl(bool nullable, H5::DataType const& t0, std::string const& tag0, H5::DataType const& t1, std::string const& tag1) {
  using UnionType = ::InnerUnion2<TInner0, TOuter0, TInner1, TOuter1>;
  H5::CompType rtn(sizeof(UnionType));
  rtn.insertMember("$type", HOFFSET(UnionType, type_index_), yardl::hdf5::UnionTypeEnumDdl(nullable, tag0, tag1));
  rtn.insertMember(tag0, HOFFSET(UnionType, value0_), t0);
  rtn.insertMember(tag1, HOFFSET(UnionType, value1_), t1);
  return rtn;
}

template <typename TInner0, typename TOuter0, typename TInner1, typename TOuter1, typename TInner2, typename TOuter2, typename TInner3, typename TOuter3>
class InnerUnion4 {
  public:
  InnerUnion4() : type_index_(-1) {} 
  InnerUnion4(std::variant<TOuter0, TOuter1, TOuter2, TOuter3> const& v) : type_index_(static_cast<int8_t>(v.index())) {
    Init(v);
  }

  InnerUnion4(std::variant<std::monostate, TOuter0, TOuter1, TOuter2, TOuter3> const& v) : type_index_(static_cast<int8_t>(v.index()) - 1) {
    Init(v);
  }

  InnerUnion4(InnerUnion4 const& v) = delete;

  InnerUnion4 operator=(InnerUnion4 const&) = delete;

  ~InnerUnion4() {
    switch (type_index_) {
    case 0:
      value0_.~TInner0();
      break;
    case 1:
      value1_.~TInner1();
      break;
    case 2:
      value2_.~TInner2();
      break;
    case 3:
      value3_.~TInner3();
      break;
    }
  }

  void ToOuter(std::variant<TOuter0, TOuter1, TOuter2, TOuter3>& o) const {
    ToOuterImpl(o);
  }

  void ToOuter(std::variant<std::monostate, TOuter0, TOuter1, TOuter2, TOuter3>& o) const {
    ToOuterImpl(o);
  }

  int8_t type_index_;
  union {
    char empty0_[sizeof(TInner0)]{};
    TInner0 value0_;
  };
  union {
    char empty1_[sizeof(TInner1)]{};
    TInner1 value1_;
  };
  union {
    char empty2_[sizeof(TInner2)]{};
    TInner2 value2_;
  };
  union {
    char empty3_[sizeof(TInner3)]{};
    TInner3 value3_;
  };

  private:
  template <typename T>
  void Init(T const& v) {
    constexpr size_t offset = GetOuterVariantOffset<std::remove_const_t<std::remove_reference_t<decltype(v)>>>();
    switch (type_index_) {
    case 0:
      new (&value0_) TInner0(std::get<0 + offset>(v));
      return;
    case 1:
      new (&value1_) TInner1(std::get<1 + offset>(v));
      return;
    case 2:
      new (&value2_) TInner2(std::get<2 + offset>(v));
      return;
    case 3:
      new (&value3_) TInner3(std::get<3 + offset>(v));
      return;
    }
  }

  template <typename TVariant>
  void ToOuterImpl(TVariant& o) const {
    constexpr size_t offset = GetOuterVariantOffset<TVariant>();
    switch (type_index_) {
    case -1:
      if constexpr (offset == 1) {
        o.template emplace<0>(std::monostate{});
        return;
      }
    case 0:
      o.template emplace<0 + offset>();
      yardl::hdf5::ToOuter(value0_, std::get<0 + offset>(o));
      return;
    case 1:
      o.template emplace<1 + offset>();
      yardl::hdf5::ToOuter(value1_, std::get<1 + offset>(o));
      return;
    case 2:
      o.template emplace<2 + offset>();
      yardl::hdf5::ToOuter(value2_, std::get<2 + offset>(o));
      return;
    case 3:
      o.template emplace<3 + offset>();
      yardl::hdf5::ToOuter(value3_, std::get<3 + offset>(o));
      return;
    }
    throw std::runtime_error("unrecognized type variant type index " + std::to_string(type_index_));
  }

  template <typename TVariant>
  static constexpr size_t GetOuterVariantOffset() {
    constexpr bool has_monostate = std::is_same_v<std::monostate, std::variant_alternative_t<0, TVariant>>;
    if constexpr (has_monostate) {
      return 1;
    }
      return 0;
  }
};

template <typename TInner0, typename TOuter0, typename TInner1, typename TOuter1, typename TInner2, typename TOuter2, typename TInner3, typename TOuter3>
H5::CompType InnerUnion4Ddl(bool nullable, H5::DataType const& t0, std::string const& tag0, H5::DataType const& t1, std::string const& tag1, H5::DataType const& t2, std::string const& tag2, H5::DataType const& t3, std::string const& tag3) {
  using UnionType = ::InnerUnion4<TInner0, TOuter0, TInner1, TOuter1, TInner2, TOuter2, TInner3, TOuter3>;
  H5::CompType rtn(sizeof(UnionType));
  rtn.insertMember("$type", HOFFSET(UnionType, type_index_), yardl::hdf5::UnionTypeEnumDdl(nullable, tag0, tag1, tag2, tag3));
  rtn.insertMember(tag0, HOFFSET(UnionType, value0_), t0);
  rtn.insertMember(tag1, HOFFSET(UnionType, value1_), t1);
  rtn.insertMember(tag2, HOFFSET(UnionType, value2_), t2);
  rtn.insertMember(tag3, HOFFSET(UnionType, value3_), t3);
  return rtn;
}
}

namespace evo_test::hdf5 {
namespace {
struct _Inner_UnchangedRecord {
  _Inner_UnchangedRecord() {} 
  _Inner_UnchangedRecord(evo_test::UnchangedRecord const& o) 
      : name(o.name),
      age(o.age),
      meta(o.meta) {
  }

  void ToOuter (evo_test::UnchangedRecord& o) const {
    yardl::hdf5::ToOuter(name, o.name);
    yardl::hdf5::ToOuter(age, o.age);
    yardl::hdf5::ToOuter(meta, o.meta);
  }

  yardl::hdf5::InnerVlenString name;
  int32_t age;
  yardl::hdf5::InnerMap<yardl::hdf5::InnerVlenString, std::string, double, double> meta;
};

struct _Inner_RecordWithChanges {
  _Inner_RecordWithChanges() {} 
  _Inner_RecordWithChanges(evo_test::RecordWithChanges const& o) 
      : int_to_long(o.int_to_long),
      deprecated_vector(o.deprecated_vector),
      float_to_double(o.float_to_double),
      deprecated_array(o.deprecated_array),
      optional_long_to_string(o.optional_long_to_string),
      deprecated_map(o.deprecated_map),
      unchanged_record(o.unchanged_record) {
  }

  void ToOuter (evo_test::RecordWithChanges& o) const {
    yardl::hdf5::ToOuter(int_to_long, o.int_to_long);
    yardl::hdf5::ToOuter(deprecated_vector, o.deprecated_vector);
    yardl::hdf5::ToOuter(float_to_double, o.float_to_double);
    yardl::hdf5::ToOuter(deprecated_array, o.deprecated_array);
    yardl::hdf5::ToOuter(optional_long_to_string, o.optional_long_to_string);
    yardl::hdf5::ToOuter(deprecated_map, o.deprecated_map);
    yardl::hdf5::ToOuter(unchanged_record, o.unchanged_record);
  }

  int32_t int_to_long;
  yardl::hdf5::InnerVlen<int32_t, int32_t> deprecated_vector;
  float float_to_double;
  yardl::FixedNDArray<uint8_t, 7> deprecated_array;
  yardl::hdf5::InnerOptional<int64_t, int64_t> optional_long_to_string;
  yardl::hdf5::InnerMap<yardl::hdf5::InnerVlenString, std::string, yardl::hdf5::InnerVlen<int32_t, int32_t>, std::vector<int32_t>> deprecated_map;
  evo_test::hdf5::_Inner_UnchangedRecord unchanged_record;
};

struct _Inner_RenamedRecord {
  _Inner_RenamedRecord() {} 
  _Inner_RenamedRecord(evo_test::RenamedRecord const& o) 
      : i(o.i),
      s(o.s) {
  }

  void ToOuter (evo_test::RenamedRecord& o) const {
    yardl::hdf5::ToOuter(i, o.i);
    yardl::hdf5::ToOuter(s, o.s);
  }

  int32_t i;
  yardl::hdf5::InnerVlenString s;
};

struct _Inner_RC {
  _Inner_RC() {} 
  _Inner_RC(evo_test::RC const& o) 
      : subject(o.subject) {
  }

  void ToOuter (evo_test::RC& o) const {
    yardl::hdf5::ToOuter(subject, o.subject);
  }

  yardl::hdf5::InnerVlenString subject;
};

struct _Inner_UnusedButChangedRecord {
  _Inner_UnusedButChangedRecord() {} 
  _Inner_UnusedButChangedRecord(evo_test::UnusedButChangedRecord const& o) 
      : name(o.name),
      age(o.age) {
  }

  void ToOuter (evo_test::UnusedButChangedRecord& o) const {
    yardl::hdf5::ToOuter(name, o.name);
    yardl::hdf5::ToOuter(age, o.age);
  }

  yardl::hdf5::InnerVlenString name;
  int32_t age;
};

[[maybe_unused]] H5::CompType GetUnchangedRecordHdf5Ddl() {
  using RecordType = evo_test::hdf5::_Inner_UnchangedRecord;
  H5::CompType t(sizeof(RecordType));
  t.insertMember("name", HOFFSET(RecordType, name), yardl::hdf5::InnerVlenStringDdl());
  t.insertMember("age", HOFFSET(RecordType, age), H5::PredType::NATIVE_INT32);
  t.insertMember("meta", HOFFSET(RecordType, meta), yardl::hdf5::InnerMapDdl<yardl::hdf5::InnerVlenString, double>(yardl::hdf5::InnerVlenStringDdl(), H5::PredType::NATIVE_DOUBLE));
  return t;
}

[[maybe_unused]] H5::CompType GetRecordWithChangesHdf5Ddl() {
  using RecordType = evo_test::hdf5::_Inner_RecordWithChanges;
  H5::CompType t(sizeof(RecordType));
  t.insertMember("intToLong", HOFFSET(RecordType, int_to_long), H5::PredType::NATIVE_INT32);
  t.insertMember("deprecatedVector", HOFFSET(RecordType, deprecated_vector), yardl::hdf5::InnerVlenDdl(H5::PredType::NATIVE_INT32));
  t.insertMember("floatToDouble", HOFFSET(RecordType, float_to_double), H5::PredType::NATIVE_FLOAT);
  t.insertMember("deprecatedArray", HOFFSET(RecordType, deprecated_array), yardl::hdf5::FixedNDArrayDdl(H5::PredType::NATIVE_UINT8, {7}));
  t.insertMember("optionalLongToString", HOFFSET(RecordType, optional_long_to_string), yardl::hdf5::OptionalTypeDdl<int64_t, int64_t>(H5::PredType::NATIVE_INT64));
  t.insertMember("deprecatedMap", HOFFSET(RecordType, deprecated_map), yardl::hdf5::InnerMapDdl<yardl::hdf5::InnerVlenString, yardl::hdf5::InnerVlen<int32_t, int32_t>>(yardl::hdf5::InnerVlenStringDdl(), yardl::hdf5::InnerVlenDdl(H5::PredType::NATIVE_INT32)));
  t.insertMember("unchangedRecord", HOFFSET(RecordType, unchanged_record), evo_test::hdf5::GetUnchangedRecordHdf5Ddl());
  return t;
}

[[maybe_unused]] H5::CompType GetRenamedRecordHdf5Ddl() {
  using RecordType = evo_test::hdf5::_Inner_RenamedRecord;
  H5::CompType t(sizeof(RecordType));
  t.insertMember("i", HOFFSET(RecordType, i), H5::PredType::NATIVE_INT32);
  t.insertMember("s", HOFFSET(RecordType, s), yardl::hdf5::InnerVlenStringDdl());
  return t;
}

[[maybe_unused]] H5::CompType GetRCHdf5Ddl() {
  using RecordType = evo_test::hdf5::_Inner_RC;
  H5::CompType t(sizeof(RecordType));
  t.insertMember("subject", HOFFSET(RecordType, subject), yardl::hdf5::InnerVlenStringDdl());
  return t;
}

[[maybe_unused]] H5::CompType GetUnusedButChangedRecordHdf5Ddl() {
  using RecordType = evo_test::hdf5::_Inner_UnusedButChangedRecord;
  H5::CompType t(sizeof(RecordType));
  t.insertMember("name", HOFFSET(RecordType, name), yardl::hdf5::InnerVlenStringDdl());
  t.insertMember("age", HOFFSET(RecordType, age), H5::PredType::NATIVE_INT32);
  return t;
}

} // namespace 

ProtocolWithChangesWriter::ProtocolWithChangesWriter(std::string path)
    : yardl::hdf5::Hdf5Writer::Hdf5Writer(path, "ProtocolWithChanges", schema_) {
}

void ProtocolWithChangesWriter::WriteInt8ToIntImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToInt", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteInt8ToLongImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToLong", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteInt8ToUintImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToUint", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteInt8ToUlongImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToUlong", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteInt8ToFloatImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToFloat", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteInt8ToDoubleImpl(int8_t const& value) {
  yardl::hdf5::WriteScalarDataset<int8_t, int8_t>(group_, "int8ToDouble", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesWriter::WriteIntToUintImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToUint", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteIntToLongImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToLong", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteIntToFloatImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToFloat", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteIntToDoubleImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToDouble", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteUintToUlongImpl(uint32_t const& value) {
  yardl::hdf5::WriteScalarDataset<uint32_t, uint32_t>(group_, "uintToUlong", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesWriter::WriteUintToFloatImpl(uint32_t const& value) {
  yardl::hdf5::WriteScalarDataset<uint32_t, uint32_t>(group_, "uintToFloat", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesWriter::WriteUintToDoubleImpl(uint32_t const& value) {
  yardl::hdf5::WriteScalarDataset<uint32_t, uint32_t>(group_, "uintToDouble", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesWriter::WriteFloatToDoubleImpl(float const& value) {
  yardl::hdf5::WriteScalarDataset<float, float>(group_, "floatToDouble", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesWriter::WriteIntToStringImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToString", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteUintToStringImpl(uint32_t const& value) {
  yardl::hdf5::WriteScalarDataset<uint32_t, uint32_t>(group_, "uintToString", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesWriter::WriteLongToStringImpl(int64_t const& value) {
  yardl::hdf5::WriteScalarDataset<int64_t, int64_t>(group_, "longToString", H5::PredType::NATIVE_INT64, value);
}

void ProtocolWithChangesWriter::WriteUlongToStringImpl(uint64_t const& value) {
  yardl::hdf5::WriteScalarDataset<uint64_t, uint64_t>(group_, "ulongToString", H5::PredType::NATIVE_UINT64, value);
}

void ProtocolWithChangesWriter::WriteFloatToStringImpl(float const& value) {
  yardl::hdf5::WriteScalarDataset<float, float>(group_, "floatToString", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesWriter::WriteDoubleToStringImpl(double const& value) {
  yardl::hdf5::WriteScalarDataset<double, double>(group_, "doubleToString", H5::PredType::NATIVE_DOUBLE, value);
}

void ProtocolWithChangesWriter::WriteIntToOptionalImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToOptional", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteFloatToOptionalImpl(float const& value) {
  yardl::hdf5::WriteScalarDataset<float, float>(group_, "floatToOptional", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesWriter::WriteStringToOptionalImpl(std::string const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToOptional", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesWriter::WriteIntToUnionImpl(int32_t const& value) {
  yardl::hdf5::WriteScalarDataset<int32_t, int32_t>(group_, "intToUnion", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesWriter::WriteFloatToUnionImpl(float const& value) {
  yardl::hdf5::WriteScalarDataset<float, float>(group_, "floatToUnion", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesWriter::WriteStringToUnionImpl(std::string const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToUnion", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesWriter::WriteOptionalIntToFloatImpl(std::optional<int32_t> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<int32_t, int32_t>, std::optional<int32_t>>(group_, "optionalIntToFloat", yardl::hdf5::OptionalTypeDdl<int32_t, int32_t>(H5::PredType::NATIVE_INT32), value);
}

void ProtocolWithChangesWriter::WriteOptionalFloatToStringImpl(std::optional<float> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<float, float>, std::optional<float>>(group_, "optionalFloatToString", yardl::hdf5::OptionalTypeDdl<float, float>(H5::PredType::NATIVE_FLOAT), value);
}

void ProtocolWithChangesWriter::WriteAliasedLongToStringImpl(evo_test::AliasedLongToString const& value) {
  yardl::hdf5::WriteScalarDataset<int64_t, evo_test::AliasedLongToString>(group_, "aliasedLongToString", H5::PredType::NATIVE_INT64, value);
}

void ProtocolWithChangesWriter::WriteStringToAliasedStringImpl(std::string const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToAliasedString", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesWriter::WriteStringToAliasedIntImpl(std::string const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToAliasedInt", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesWriter::WriteOptionalIntToUnionImpl(std::optional<int32_t> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<int32_t, int32_t>, std::optional<int32_t>>(group_, "optionalIntToUnion", yardl::hdf5::OptionalTypeDdl<int32_t, int32_t>(H5::PredType::NATIVE_INT32), value);
}

void ProtocolWithChangesWriter::WriteOptionalRecordToUnionImpl(std::optional<evo_test::RecordWithChanges> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::optional<evo_test::RecordWithChanges>>(group_, "optionalRecordToUnion", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesWriter::WriteRecordWithChangesImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteAliasedRecordWithChangesImpl(evo_test::AliasedRecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>(group_, "aliasedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToRenamedRecordImpl(evo_test::RenamedRecord const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RenamedRecord, evo_test::RenamedRecord>(group_, "recordToRenamedRecord", evo_test::hdf5::GetRenamedRecordHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToAliasedRecordImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedRecord", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToAliasedAliasImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedAlias", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkRXImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkRYImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkRZImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRLinkImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRXImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRYImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRZImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRLinkImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRXImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRYImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRZImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRLinkImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRXImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRYImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRZImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkRNewImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRNewImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRNewImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRNewImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRlinkRUnionImpl(evo_test::RLink const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRaRUnionImpl(evo_test::RA const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRbRUnionImpl(evo_test::RB const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRcRUnionImpl(evo_test::RC const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteOptionalRecordWithChangesImpl(std::optional<evo_test::RecordWithChanges> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::optional<evo_test::RecordWithChanges>>(group_, "optionalRecordWithChanges", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesWriter::WriteAliasedOptionalRecordWithChangesImpl(std::optional<evo_test::AliasedRecordWithChanges> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>, std::optional<evo_test::AliasedRecordWithChanges>>(group_, "aliasedOptionalRecordWithChanges", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesWriter::WriteUnionRecordWithChangesImpl(std::variant<evo_test::RecordWithChanges, int32_t> const& value) {
  yardl::hdf5::WriteScalarDataset<::InnerUnion2<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t>, std::variant<evo_test::RecordWithChanges, int32_t>>(group_, "unionRecordWithChanges", ::InnerUnion2Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32"), value);
}

void ProtocolWithChangesWriter::WriteUnionWithSameTypesetImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string> const& value) {
  yardl::hdf5::WriteScalarDataset<::InnerUnion4<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>, std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>>(group_, "unionWithSameTypeset", ::InnerUnion4Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32", H5::PredType::NATIVE_FLOAT, "float32", yardl::hdf5::InnerVlenStringDdl(), "string"), value);
}

void ProtocolWithChangesWriter::WriteUnionWithTypesAddedImpl(std::variant<evo_test::RecordWithChanges, float> const& value) {
  yardl::hdf5::WriteScalarDataset<::InnerUnion2<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, float, float>, std::variant<evo_test::RecordWithChanges, float>>(group_, "unionWithTypesAdded", ::InnerUnion2Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, float, float>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_FLOAT, "float32"), value);
}

void ProtocolWithChangesWriter::WriteUnionWithTypesRemovedImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string> const& value) {
  yardl::hdf5::WriteScalarDataset<::InnerUnion4<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>, std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>>(group_, "unionWithTypesRemoved", ::InnerUnion4Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32", H5::PredType::NATIVE_FLOAT, "float32", yardl::hdf5::InnerVlenStringDdl(), "string"), value);
}

void ProtocolWithChangesWriter::WriteRecordToOptionalImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToOptional", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToAliasedOptionalImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedOptional", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToUnionImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToUnion", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteRecordToAliasedUnionImpl(evo_test::RecordWithChanges const& value) {
  yardl::hdf5::WriteScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedUnion", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesWriter::WriteVectorRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges> const& value) {
  yardl::hdf5::WriteScalarDataset<yardl::hdf5::InnerVlen<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::vector<evo_test::RecordWithChanges>>(group_, "vectorRecordWithChanges", yardl::hdf5::InnerVlenDdl(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesWriter::WriteStreamedRecordWithChangesImpl(evo_test::RecordWithChanges const& value) {
  if (!streamedRecordWithChanges_dataset_state_) {
    streamedRecordWithChanges_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "streamedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_RecordWithChanges), sizeof(evo_test::RecordWithChanges)));
  }

  streamedRecordWithChanges_dataset_state_->Append<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(value);
}

void ProtocolWithChangesWriter::WriteStreamedRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges> const& values) {
  if (!streamedRecordWithChanges_dataset_state_) {
    streamedRecordWithChanges_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "streamedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_RecordWithChanges), sizeof(evo_test::RecordWithChanges)));
  }

  streamedRecordWithChanges_dataset_state_->AppendBatch<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(values);
}

void ProtocolWithChangesWriter::EndStreamedRecordWithChangesImpl() {
  if (!streamedRecordWithChanges_dataset_state_) {
    streamedRecordWithChanges_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "streamedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_RecordWithChanges), sizeof(evo_test::RecordWithChanges)));
  }

  streamedRecordWithChanges_dataset_state_.reset();
}

ProtocolWithChangesReader::ProtocolWithChangesReader(std::string path)
    : yardl::hdf5::Hdf5Reader::Hdf5Reader(path, "ProtocolWithChanges", schema_) {
}

void ProtocolWithChangesReader::ReadInt8ToIntImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToInt", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadInt8ToLongImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToLong", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadInt8ToUintImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToUint", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadInt8ToUlongImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToUlong", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadInt8ToFloatImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToFloat", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadInt8ToDoubleImpl(int8_t& value) {
  yardl::hdf5::ReadScalarDataset<int8_t, int8_t>(group_, "int8ToDouble", H5::PredType::NATIVE_INT8, value);
}

void ProtocolWithChangesReader::ReadIntToUintImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToUint", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadIntToLongImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToLong", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadIntToFloatImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToFloat", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadIntToDoubleImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToDouble", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadUintToUlongImpl(uint32_t& value) {
  yardl::hdf5::ReadScalarDataset<uint32_t, uint32_t>(group_, "uintToUlong", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesReader::ReadUintToFloatImpl(uint32_t& value) {
  yardl::hdf5::ReadScalarDataset<uint32_t, uint32_t>(group_, "uintToFloat", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesReader::ReadUintToDoubleImpl(uint32_t& value) {
  yardl::hdf5::ReadScalarDataset<uint32_t, uint32_t>(group_, "uintToDouble", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesReader::ReadFloatToDoubleImpl(float& value) {
  yardl::hdf5::ReadScalarDataset<float, float>(group_, "floatToDouble", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesReader::ReadIntToStringImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToString", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadUintToStringImpl(uint32_t& value) {
  yardl::hdf5::ReadScalarDataset<uint32_t, uint32_t>(group_, "uintToString", H5::PredType::NATIVE_UINT32, value);
}

void ProtocolWithChangesReader::ReadLongToStringImpl(int64_t& value) {
  yardl::hdf5::ReadScalarDataset<int64_t, int64_t>(group_, "longToString", H5::PredType::NATIVE_INT64, value);
}

void ProtocolWithChangesReader::ReadUlongToStringImpl(uint64_t& value) {
  yardl::hdf5::ReadScalarDataset<uint64_t, uint64_t>(group_, "ulongToString", H5::PredType::NATIVE_UINT64, value);
}

void ProtocolWithChangesReader::ReadFloatToStringImpl(float& value) {
  yardl::hdf5::ReadScalarDataset<float, float>(group_, "floatToString", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesReader::ReadDoubleToStringImpl(double& value) {
  yardl::hdf5::ReadScalarDataset<double, double>(group_, "doubleToString", H5::PredType::NATIVE_DOUBLE, value);
}

void ProtocolWithChangesReader::ReadIntToOptionalImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToOptional", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadFloatToOptionalImpl(float& value) {
  yardl::hdf5::ReadScalarDataset<float, float>(group_, "floatToOptional", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesReader::ReadStringToOptionalImpl(std::string& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToOptional", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesReader::ReadIntToUnionImpl(int32_t& value) {
  yardl::hdf5::ReadScalarDataset<int32_t, int32_t>(group_, "intToUnion", H5::PredType::NATIVE_INT32, value);
}

void ProtocolWithChangesReader::ReadFloatToUnionImpl(float& value) {
  yardl::hdf5::ReadScalarDataset<float, float>(group_, "floatToUnion", H5::PredType::NATIVE_FLOAT, value);
}

void ProtocolWithChangesReader::ReadStringToUnionImpl(std::string& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToUnion", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesReader::ReadOptionalIntToFloatImpl(std::optional<int32_t>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<int32_t, int32_t>, std::optional<int32_t>>(group_, "optionalIntToFloat", yardl::hdf5::OptionalTypeDdl<int32_t, int32_t>(H5::PredType::NATIVE_INT32), value);
}

void ProtocolWithChangesReader::ReadOptionalFloatToStringImpl(std::optional<float>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<float, float>, std::optional<float>>(group_, "optionalFloatToString", yardl::hdf5::OptionalTypeDdl<float, float>(H5::PredType::NATIVE_FLOAT), value);
}

void ProtocolWithChangesReader::ReadAliasedLongToStringImpl(evo_test::AliasedLongToString& value) {
  yardl::hdf5::ReadScalarDataset<int64_t, evo_test::AliasedLongToString>(group_, "aliasedLongToString", H5::PredType::NATIVE_INT64, value);
}

void ProtocolWithChangesReader::ReadStringToAliasedStringImpl(std::string& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToAliasedString", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesReader::ReadStringToAliasedIntImpl(std::string& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerVlenString, std::string>(group_, "stringToAliasedInt", yardl::hdf5::InnerVlenStringDdl(), value);
}

void ProtocolWithChangesReader::ReadOptionalIntToUnionImpl(std::optional<int32_t>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<int32_t, int32_t>, std::optional<int32_t>>(group_, "optionalIntToUnion", yardl::hdf5::OptionalTypeDdl<int32_t, int32_t>(H5::PredType::NATIVE_INT32), value);
}

void ProtocolWithChangesReader::ReadOptionalRecordToUnionImpl(std::optional<evo_test::RecordWithChanges>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::optional<evo_test::RecordWithChanges>>(group_, "optionalRecordToUnion", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesReader::ReadRecordWithChangesImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadAliasedRecordWithChangesImpl(evo_test::AliasedRecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>(group_, "aliasedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToRenamedRecordImpl(evo_test::RenamedRecord& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RenamedRecord, evo_test::RenamedRecord>(group_, "recordToRenamedRecord", evo_test::hdf5::GetRenamedRecordHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToAliasedRecordImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedRecord", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToAliasedAliasImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedAlias", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkRXImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkRYImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkRZImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRLinkImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRXImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRYImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRZImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRLinkImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRXImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRYImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRZImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRLinkImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRLink", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRXImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRX", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRYImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRY", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRZImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRZ", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkRNewImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRNewImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRNewImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRNewImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRNew", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRlinkRUnionImpl(evo_test::RLink& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RLink>(group_, "rlinkRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRaRUnionImpl(evo_test::RA& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RA>(group_, "raRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRbRUnionImpl(evo_test::RB& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RB>(group_, "rbRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRcRUnionImpl(evo_test::RC& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RC, evo_test::RC>(group_, "rcRUnion", evo_test::hdf5::GetRCHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadOptionalRecordWithChangesImpl(std::optional<evo_test::RecordWithChanges>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::optional<evo_test::RecordWithChanges>>(group_, "optionalRecordWithChanges", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesReader::ReadAliasedOptionalRecordWithChangesImpl(std::optional<evo_test::AliasedRecordWithChanges>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerOptional<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>, std::optional<evo_test::AliasedRecordWithChanges>>(group_, "aliasedOptionalRecordWithChanges", yardl::hdf5::OptionalTypeDdl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::AliasedRecordWithChanges>(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

void ProtocolWithChangesReader::ReadUnionRecordWithChangesImpl(std::variant<evo_test::RecordWithChanges, int32_t>& value) {
  yardl::hdf5::ReadScalarDataset<::InnerUnion2<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t>, std::variant<evo_test::RecordWithChanges, int32_t>>(group_, "unionRecordWithChanges", ::InnerUnion2Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32"), value);
}

void ProtocolWithChangesReader::ReadUnionWithSameTypesetImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>& value) {
  yardl::hdf5::ReadScalarDataset<::InnerUnion4<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>, std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>>(group_, "unionWithSameTypeset", ::InnerUnion4Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32", H5::PredType::NATIVE_FLOAT, "float32", yardl::hdf5::InnerVlenStringDdl(), "string"), value);
}

void ProtocolWithChangesReader::ReadUnionWithTypesAddedImpl(std::variant<evo_test::RecordWithChanges, float>& value) {
  yardl::hdf5::ReadScalarDataset<::InnerUnion2<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, float, float>, std::variant<evo_test::RecordWithChanges, float>>(group_, "unionWithTypesAdded", ::InnerUnion2Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, float, float>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_FLOAT, "float32"), value);
}

void ProtocolWithChangesReader::ReadUnionWithTypesRemovedImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>& value) {
  yardl::hdf5::ReadScalarDataset<::InnerUnion4<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>, std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>>(group_, "unionWithTypesRemoved", ::InnerUnion4Ddl<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges, int32_t, int32_t, float, float, yardl::hdf5::InnerVlenString, std::string>(false, evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), "RecordWithChanges", H5::PredType::NATIVE_INT32, "int32", H5::PredType::NATIVE_FLOAT, "float32", yardl::hdf5::InnerVlenStringDdl(), "string"), value);
}

void ProtocolWithChangesReader::ReadRecordToOptionalImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToOptional", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToAliasedOptionalImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedOptional", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToUnionImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToUnion", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadRecordToAliasedUnionImpl(evo_test::RecordWithChanges& value) {
  yardl::hdf5::ReadScalarDataset<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(group_, "recordToAliasedUnion", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), value);
}

void ProtocolWithChangesReader::ReadVectorRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges>& value) {
  yardl::hdf5::ReadScalarDataset<yardl::hdf5::InnerVlen<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>, std::vector<evo_test::RecordWithChanges>>(group_, "vectorRecordWithChanges", yardl::hdf5::InnerVlenDdl(evo_test::hdf5::GetRecordWithChangesHdf5Ddl()), value);
}

bool ProtocolWithChangesReader::ReadStreamedRecordWithChangesImpl(evo_test::RecordWithChanges& value) {
  if (!streamedRecordWithChanges_dataset_state_) {
    streamedRecordWithChanges_dataset_state_ = std::make_unique<yardl::hdf5::DatasetReader>(group_, "streamedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_RecordWithChanges), sizeof(evo_test::RecordWithChanges)));
  }

  bool has_value = streamedRecordWithChanges_dataset_state_->Read<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(value);
  if (!has_value) {
    streamedRecordWithChanges_dataset_state_.reset();
  }

  return has_value;
}

bool ProtocolWithChangesReader::ReadStreamedRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges>& values) {
  if (!streamedRecordWithChanges_dataset_state_) {
    streamedRecordWithChanges_dataset_state_ = std::make_unique<yardl::hdf5::DatasetReader>(group_, "streamedRecordWithChanges", evo_test::hdf5::GetRecordWithChangesHdf5Ddl());
  }

  bool has_more = streamedRecordWithChanges_dataset_state_->ReadBatch<evo_test::hdf5::_Inner_RecordWithChanges, evo_test::RecordWithChanges>(values);
  if (!has_more) {
    streamedRecordWithChanges_dataset_state_.reset();
  }

  return has_more;
}

UnusedProtocolWriter::UnusedProtocolWriter(std::string path)
    : yardl::hdf5::Hdf5Writer::Hdf5Writer(path, "UnusedProtocol", schema_) {
}

void UnusedProtocolWriter::WriteRecordsImpl(evo_test::UnchangedRecord const& value) {
  if (!records_dataset_state_) {
    records_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "records", evo_test::hdf5::GetUnchangedRecordHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_UnchangedRecord), sizeof(evo_test::UnchangedRecord)));
  }

  records_dataset_state_->Append<evo_test::hdf5::_Inner_UnchangedRecord, evo_test::UnchangedRecord>(value);
}

void UnusedProtocolWriter::WriteRecordsImpl(std::vector<evo_test::UnchangedRecord> const& values) {
  if (!records_dataset_state_) {
    records_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "records", evo_test::hdf5::GetUnchangedRecordHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_UnchangedRecord), sizeof(evo_test::UnchangedRecord)));
  }

  records_dataset_state_->AppendBatch<evo_test::hdf5::_Inner_UnchangedRecord, evo_test::UnchangedRecord>(values);
}

void UnusedProtocolWriter::EndRecordsImpl() {
  if (!records_dataset_state_) {
    records_dataset_state_ = std::make_unique<yardl::hdf5::DatasetWriter>(group_, "records", evo_test::hdf5::GetUnchangedRecordHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_UnchangedRecord), sizeof(evo_test::UnchangedRecord)));
  }

  records_dataset_state_.reset();
}

UnusedProtocolReader::UnusedProtocolReader(std::string path)
    : yardl::hdf5::Hdf5Reader::Hdf5Reader(path, "UnusedProtocol", schema_) {
}

bool UnusedProtocolReader::ReadRecordsImpl(evo_test::UnchangedRecord& value) {
  if (!records_dataset_state_) {
    records_dataset_state_ = std::make_unique<yardl::hdf5::DatasetReader>(group_, "records", evo_test::hdf5::GetUnchangedRecordHdf5Ddl(), std::max(sizeof(evo_test::hdf5::_Inner_UnchangedRecord), sizeof(evo_test::UnchangedRecord)));
  }

  bool has_value = records_dataset_state_->Read<evo_test::hdf5::_Inner_UnchangedRecord, evo_test::UnchangedRecord>(value);
  if (!has_value) {
    records_dataset_state_.reset();
  }

  return has_value;
}

bool UnusedProtocolReader::ReadRecordsImpl(std::vector<evo_test::UnchangedRecord>& values) {
  if (!records_dataset_state_) {
    records_dataset_state_ = std::make_unique<yardl::hdf5::DatasetReader>(group_, "records", evo_test::hdf5::GetUnchangedRecordHdf5Ddl());
  }

  bool has_more = records_dataset_state_->ReadBatch<evo_test::hdf5::_Inner_UnchangedRecord, evo_test::UnchangedRecord>(values);
  if (!has_more) {
    records_dataset_state_.reset();
  }

  return has_more;
}

} // namespace evo_test::hdf5

