// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../types.h"
#include "../yardl/detail/hdf5/io.h"

namespace evo_test::hdf5 {
// HDF5 writer for the MyProtocol protocol.
class MyProtocolWriter : public evo_test::MyProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  MyProtocolWriter(std::string path);

  protected:
  void WriteHeaderImpl(evo_test::Header const& value) override;

  void WriteIdImpl(std::string const& value) override;

  void WriteSamplesImpl(evo_test::Sample const& value) override;

  void WriteSamplesImpl(std::vector<evo_test::Sample> const& values) override;

  void EndSamplesImpl() override;

  void WriteMaybeImpl(std::optional<std::string> const& value) override;

  void WriteFooterImpl(std::optional<evo_test::Footer> const& value) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> samples_dataset_state_;
};

// HDF5 reader for the MyProtocol protocol.
class MyProtocolReader : public evo_test::MyProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  MyProtocolReader(std::string path);

  void ReadHeaderImpl(evo_test::Header& value) override;

  void ReadIdImpl(std::string& value) override;

  bool ReadSamplesImpl(evo_test::Sample& value) override;

  bool ReadSamplesImpl(std::vector<evo_test::Sample>& values) override;

  void ReadMaybeImpl(std::optional<std::string>& value) override;

  void ReadFooterImpl(std::optional<evo_test::Footer>& value) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> samples_dataset_state_;
};

// HDF5 writer for the NewProtocol protocol.
class NewProtocolWriter : public evo_test::NewProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  NewProtocolWriter(std::string path);

  protected:
  void WriteCalibrationImpl(std::vector<double> const& value) override;

  void WriteDataImpl(evo_test::NewRecord const& value) override;

  void WriteDataImpl(std::vector<evo_test::NewRecord> const& values) override;

  void EndDataImpl() override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> data_dataset_state_;
};

// HDF5 reader for the NewProtocol protocol.
class NewProtocolReader : public evo_test::NewProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  NewProtocolReader(std::string path);

  void ReadCalibrationImpl(std::vector<double>& value) override;

  bool ReadDataImpl(evo_test::NewRecord& value) override;

  bool ReadDataImpl(std::vector<evo_test::NewRecord>& values) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> data_dataset_state_;
};

} // namespace evo_test

