% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef SubarraysWriter < yardl.binary.BinaryProtocolWriter & test_model.SubarraysWriterBase
  % Binary writer for the Subarrays protocol
  properties (Access=protected)
    dynamic_with_fixed_int_subarray_serializer
    dynamic_with_fixed_float_subarray_serializer
    known_dim_count_with_fixed_int_subarray_serializer
    known_dim_count_with_fixed_float_subarray_serializer
    fixed_with_fixed_int_subarray_serializer
    fixed_with_fixed_float_subarray_serializer
    nested_subarray_serializer
    dynamic_with_fixed_vector_subarray_serializer
    generic_subarray_serializer
  end

  methods
    function self = SubarraysWriter(filename)
      self@test_model.SubarraysWriterBase();
      self@yardl.binary.BinaryProtocolWriter(filename, test_model.SubarraysWriterBase.schema);
      self.dynamic_with_fixed_int_subarray_serializer = yardl.binary.DynamicNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Int32Serializer, [3]));
      self.dynamic_with_fixed_float_subarray_serializer = yardl.binary.DynamicNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Float32Serializer, [3]));
      self.known_dim_count_with_fixed_int_subarray_serializer = yardl.binary.NDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Int32Serializer, [3]), 1);
      self.known_dim_count_with_fixed_float_subarray_serializer = yardl.binary.NDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Float32Serializer, [3]), 1);
      self.fixed_with_fixed_int_subarray_serializer = yardl.binary.FixedNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Int32Serializer, [3]), [2]);
      self.fixed_with_fixed_float_subarray_serializer = yardl.binary.FixedNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Float32Serializer, [3]), [2]);
      self.nested_subarray_serializer = yardl.binary.DynamicNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Int32Serializer, [3]), [2]));
      self.dynamic_with_fixed_vector_subarray_serializer = yardl.binary.DynamicNDArraySerializer(yardl.binary.FixedVectorSerializer(yardl.binary.Int32Serializer, 3));
      self.generic_subarray_serializer = yardl.binary.NDArraySerializer(yardl.binary.FixedNDArraySerializer(yardl.binary.Int32Serializer, [3]), 2);
    end
  end

  methods (Access=protected)
    function write_dynamic_with_fixed_int_subarray_(self, value)
      self.dynamic_with_fixed_int_subarray_serializer.write(self.stream_, value);
    end

    function write_dynamic_with_fixed_float_subarray_(self, value)
      self.dynamic_with_fixed_float_subarray_serializer.write(self.stream_, value);
    end

    function write_known_dim_count_with_fixed_int_subarray_(self, value)
      self.known_dim_count_with_fixed_int_subarray_serializer.write(self.stream_, value);
    end

    function write_known_dim_count_with_fixed_float_subarray_(self, value)
      self.known_dim_count_with_fixed_float_subarray_serializer.write(self.stream_, value);
    end

    function write_fixed_with_fixed_int_subarray_(self, value)
      self.fixed_with_fixed_int_subarray_serializer.write(self.stream_, value);
    end

    function write_fixed_with_fixed_float_subarray_(self, value)
      self.fixed_with_fixed_float_subarray_serializer.write(self.stream_, value);
    end

    function write_nested_subarray_(self, value)
      self.nested_subarray_serializer.write(self.stream_, value);
    end

    function write_dynamic_with_fixed_vector_subarray_(self, value)
      self.dynamic_with_fixed_vector_subarray_serializer.write(self.stream_, value);
    end

    function write_generic_subarray_(self, value)
      self.generic_subarray_serializer.write(self.stream_, value);
    end
  end
end
