% This file was generated by the "yardl" tool. DO NOT EDIT.

% Abstract writer for protocol Subarrays
classdef (Abstract) SubarraysWriterBase < handle
  properties (Access=protected)
    state_
  end

  methods
    function self = SubarraysWriterBase()
      self.state_ = 0;
    end

    function close(self)
      self.close_();
      if self.state_ ~= 9
        expected_method = self.state_to_method_name_(self.state_);
        throw(yardl.ProtocolError("Protocol writer closed before all steps were called. Expected call to '%s'.", expected_method));
      end
    end

    % Ordinal 0
    function write_dynamic_with_fixed_int_subarray(self, value)
      if self.state_ ~= 0
        self.raise_unexpected_state_(0);
      end

      self.write_dynamic_with_fixed_int_subarray_(value);
      self.state_ = 1;
    end

    % Ordinal 1
    function write_dynamic_with_fixed_float_subarray(self, value)
      if self.state_ ~= 1
        self.raise_unexpected_state_(1);
      end

      self.write_dynamic_with_fixed_float_subarray_(value);
      self.state_ = 2;
    end

    % Ordinal 2
    function write_known_dim_count_with_fixed_int_subarray(self, value)
      if self.state_ ~= 2
        self.raise_unexpected_state_(2);
      end

      self.write_known_dim_count_with_fixed_int_subarray_(value);
      self.state_ = 3;
    end

    % Ordinal 3
    function write_known_dim_count_with_fixed_float_subarray(self, value)
      if self.state_ ~= 3
        self.raise_unexpected_state_(3);
      end

      self.write_known_dim_count_with_fixed_float_subarray_(value);
      self.state_ = 4;
    end

    % Ordinal 4
    function write_fixed_with_fixed_int_subarray(self, value)
      if self.state_ ~= 4
        self.raise_unexpected_state_(4);
      end

      self.write_fixed_with_fixed_int_subarray_(value);
      self.state_ = 5;
    end

    % Ordinal 5
    function write_fixed_with_fixed_float_subarray(self, value)
      if self.state_ ~= 5
        self.raise_unexpected_state_(5);
      end

      self.write_fixed_with_fixed_float_subarray_(value);
      self.state_ = 6;
    end

    % Ordinal 6
    function write_nested_subarray(self, value)
      if self.state_ ~= 6
        self.raise_unexpected_state_(6);
      end

      self.write_nested_subarray_(value);
      self.state_ = 7;
    end

    % Ordinal 7
    function write_dynamic_with_fixed_vector_subarray(self, value)
      if self.state_ ~= 7
        self.raise_unexpected_state_(7);
      end

      self.write_dynamic_with_fixed_vector_subarray_(value);
      self.state_ = 8;
    end

    % Ordinal 8
    function write_generic_subarray(self, value)
      if self.state_ ~= 8
        self.raise_unexpected_state_(8);
      end

      self.write_generic_subarray_(value);
      self.state_ = 9;
    end
  end

  methods (Static)
    function res = schema()
      res = string('{"protocol":{"name":"Subarrays","sequence":[{"name":"dynamicWithFixedIntSubarray","type":{"array":{"items":{"array":{"items":"int32","dimensions":[{"length":3}]}}}}},{"name":"dynamicWithFixedFloatSubarray","type":{"array":{"items":{"array":{"items":"float32","dimensions":[{"length":3}]}}}}},{"name":"knownDimCountWithFixedIntSubarray","type":{"array":{"items":{"array":{"items":"int32","dimensions":[{"length":3}]}},"dimensions":1}}},{"name":"knownDimCountWithFixedFloatSubarray","type":{"array":{"items":{"array":{"items":"float32","dimensions":[{"length":3}]}},"dimensions":1}}},{"name":"fixedWithFixedIntSubarray","type":{"array":{"items":{"array":{"items":"int32","dimensions":[{"length":3}]}},"dimensions":[{"length":2}]}}},{"name":"fixedWithFixedFloatSubarray","type":{"array":{"items":{"array":{"items":"float32","dimensions":[{"length":3}]}},"dimensions":[{"length":2}]}}},{"name":"nestedSubarray","type":{"array":{"items":{"array":{"items":{"array":{"items":"int32","dimensions":[{"length":3}]}},"dimensions":[{"length":2}]}}}}},{"name":"dynamicWithFixedVectorSubarray","type":{"array":{"items":{"vector":{"items":"int32","length":3}}}}},{"name":"genericSubarray","type":{"name":"TestModel.Image","typeArguments":[{"array":{"items":"int32","dimensions":[{"length":3}]}}]}}]},"types":[{"name":"Image","typeParameters":["T"],"type":{"array":{"items":"T","dimensions":[{"name":"x"},{"name":"y"}]}}},{"name":"Image","typeParameters":["T"],"type":{"name":"Image.Image","typeArguments":["T"]}}]}');
    end
  end

  methods (Abstract, Access=protected)
    write_dynamic_with_fixed_int_subarray_(self, value)
    write_dynamic_with_fixed_float_subarray_(self, value)
    write_known_dim_count_with_fixed_int_subarray_(self, value)
    write_known_dim_count_with_fixed_float_subarray_(self, value)
    write_fixed_with_fixed_int_subarray_(self, value)
    write_fixed_with_fixed_float_subarray_(self, value)
    write_nested_subarray_(self, value)
    write_dynamic_with_fixed_vector_subarray_(self, value)
    write_generic_subarray_(self, value)

    end_stream_(self)
    close_(self)
  end

  methods (Access=private)
    function raise_unexpected_state_(self, actual)
      expected_method = self.state_to_method_name_(self.state_);
      actual_method = self.state_to_method_name_(actual);
      throw(yardl.ProtocolError("Expected call to '%s' but received call to '%s'", expected_method, actual_method));
    end

    function name = state_to_method_name_(self, state)
      if state == 0
        name = "write_dynamic_with_fixed_int_subarray";
      elseif state == 1
        name = "write_dynamic_with_fixed_float_subarray";
      elseif state == 2
        name = "write_known_dim_count_with_fixed_int_subarray";
      elseif state == 3
        name = "write_known_dim_count_with_fixed_float_subarray";
      elseif state == 4
        name = "write_fixed_with_fixed_int_subarray";
      elseif state == 5
        name = "write_fixed_with_fixed_float_subarray";
      elseif state == 6
        name = "write_nested_subarray";
      elseif state == 7
        name = "write_dynamic_with_fixed_vector_subarray";
      elseif state == 8
        name = "write_generic_subarray";
      else
        name = '<unknown>';
      end
    end
  end
end
