% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MultiDArraysReaderBase < handle
  properties (Access=protected)
    state_
    skip_completed_check_
  end

  methods
    function self = MultiDArraysReaderBase(options)
      arguments
        options.skip_completed_check (1,1) logical = false
      end
      self.state_ = 0;
      self.skip_completed_check_ = options.skip_completed_check;
    end

    function close(self)
      self.close_();
      if ~self.skip_completed_check_ && self.state_ ~= 2
        expected_method = self.state_to_method_name_(self.state_);
        throw(yardl.ProtocolError("Protocol reader closed before all data was consumed. Expected call to '%s'.", expected_method));
      end
    end

    % Ordinal 0
    function more = has_images(self)
      if self.state_ ~= 0
        self.raise_unexpected_state_(0);
      end

      more = self.has_images_();
      if ~more
        self.state_ = 1;
      end
    end

    function value = read_images(self)
      if self.state_ ~= 0
        self.raise_unexpected_state_(0);
      end

      value = self.read_images_();
    end

    % Ordinal 1
    function more = has_frames(self)
      if self.state_ ~= 1
        self.raise_unexpected_state_(1);
      end

      more = self.has_frames_();
      if ~more
        self.state_ = 2;
      end
    end

    function value = read_frames(self)
      if self.state_ ~= 1
        self.raise_unexpected_state_(1);
      end

      value = self.read_frames_();
    end

    function copy_to(self, writer)
      while self.has_images()
        item = self.read_images();
        writer.write_images({item});
      end
      writer.end_images();
      while self.has_frames()
        item = self.read_frames();
        writer.write_frames({item});
      end
      writer.end_frames();
    end
  end

  methods (Static)
    function res = schema()
      res = test_model.MultiDArraysWriterBase.schema;
    end
  end

  methods (Abstract, Access=protected)
    has_images_(self)
    read_images_(self)
    has_frames_(self)
    read_frames_(self)

    close_(self)
  end

  methods (Access=private)
    function raise_unexpected_state_(self, actual)
      actual_method = self.state_to_method_name_(actual);
      expected_method = self.state_to_method_name_(self.state_);
      throw(yardl.ProtocolError("Expected call to '%s' but received call to '%s'.", expected_method, actual_method));
    end

    function name = state_to_method_name_(self, state)
      if state == 0
        name = "read_images";
      elseif state == 1
        name = "read_frames";
      else
        name = "<unknown>";
      end
    end
  end
end
