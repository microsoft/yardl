name: ci

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 0 * * 3" # 00:00 every Wednesday
  workflow_dispatch:

defaults:
  run:
    # See https://github.com/marketplace/actions/setup-miniconda#important
    shell: bash -el {0}

jobs:
  validate:
    strategy:
      matrix:
        cppVersion: [17, 20]

    name: Validate C++${{ matrix.cppVersion }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure environment
        uses: ./.github/actions/configure-environment

      - name: Build and test
        run: just cpp_version=${{ matrix.cppVersion }} validate-with-no-changes

  buildBinaries:
    name: Build yardl binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "1.20.2"

      - name: Build yardl binaries for multiple platforms
        uses: goreleaser/goreleaser-action@v3
        with:
          version: v1.13.0
          args: release --rm-dist --snapshot

      - name: Upload yardl binaries
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  smoketestWindows:
    name: Run smoke test on Windows
    runs-on: windows-latest
    needs: buildBinaries
    steps:
      - uses: actions/checkout@v3

      - name: Download yardl binaries
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Set path
        shell: pwsh
        run: Add-Content $env:GITHUB_PATH "${{github.workspace}}\yardl_windows_amd64_v1"

      - name: Run smoke test
        shell: pwsh
        run: smoketest\run-smoketest.ps1

  smoketestMac:
    name: Run smoke test on macOS
    runs-on: macos-latest
    needs: buildBinaries
    steps:
      - uses: actions/checkout@v3

      - name: Download yardl binaries
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Set path
        run: |
          chmod +x "${{github.workspace}}/yardl_darwin_amd64_v1/yardl"
          echo "${{github.workspace}}/yardl_darwin_amd64_v1" >> $GITHUB_PATH

      - name: Run smoke test
        run: ./smoketest/run-smoketest-macos.sh

  codeQL:
    name: CodeQL
    runs-on: ubuntu-latest
    if: github.repository == 'microsoft/yardl'
    steps:
      - uses: actions/checkout@v3

      - name: Configure environment
        uses: ./.github/actions/configure-environment

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go, cpp

      - name: Build
        run: |
          just build-all

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  noticeCheck:
    name: Check NOTICE.txt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set variables
        run: |
          gobin="${RUNNER_TEMP}/bin"
          echo "GOBIN=${gobin}" >> $GITHUB_ENV
          echo "${gobin}" >> $GITHUB_PATH

      - name: Generate notice
        run: |
          scripts/generate-notice.sh
          if [[ `git status --porcelain` ]]; then
            echo "NOTICE.txt needs to be regenerated using scripts/generate-notice.sh"
            exit 1
          fi

  release:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    needs:
      - validate
      - smoketestWindows
      - smoketestMac
      - noticeCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git fetch --force --tags

      - name: Configure environment
        uses: ./.github/actions/configure-environment

      - name: Set PATH
        run: |
          dirname $(which go) >> $GITHUB_PATH

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: v1.13.0
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
