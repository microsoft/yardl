% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MockEnumsWriter < matlab.mixin.Copyable & test_model.EnumsWriterBase
  properties
    testCase_
    expected_single
    expected_vec
    expected_size
  end

  methods
    function obj = MockEnumsWriter(testCase)
      obj.testCase_ = testCase;
      obj.expected_single = yardl.None;
      obj.expected_vec = yardl.None;
      obj.expected_size = yardl.None;
    end

    function expect_write_single_(obj, value)
      obj.expected_single = yardl.Optional(value);
    end

    function expect_write_vec_(obj, value)
      obj.expected_vec = yardl.Optional(value);
    end

    function expect_write_size_(obj, value)
      obj.expected_size = yardl.Optional(value);
    end

    function verify(obj)
      obj.testCase_.verifyEqual(obj.expected_single, yardl.None, "Expected call to write_single_ was not received");
      obj.testCase_.verifyEqual(obj.expected_vec, yardl.None, "Expected call to write_vec_ was not received");
      obj.testCase_.verifyEqual(obj.expected_size, yardl.None, "Expected call to write_size_ was not received");
    end
  end

  methods (Access=protected)
    function write_single_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_single.has_value(), "Unexpected call to write_single_");
      obj.testCase_.verifyEqual(value, obj.expected_single.value, "Unexpected argument value for call to write_single_");
      obj.expected_single = yardl.None;
    end

    function write_vec_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_vec.has_value(), "Unexpected call to write_vec_");
      obj.testCase_.verifyEqual(value, obj.expected_vec.value, "Unexpected argument value for call to write_vec_");
      obj.expected_vec = yardl.None;
    end

    function write_size_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_size.has_value(), "Unexpected call to write_size_");
      obj.testCase_.verifyEqual(value, obj.expected_size.value, "Unexpected argument value for call to write_size_");
      obj.expected_size = yardl.None;
    end

    function close_(obj)
    end
    function end_stream_(obj)
    end
  end
end
