% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef SimpleGenericsReader < yardl.binary.BinaryProtocolReader & test_model.SimpleGenericsReaderBase
  % Binary reader for the SimpleGenerics protocol
  properties (Access=protected)
    float_image_serializer
    int_image_serializer
    int_image_alternate_syntax_serializer
    string_image_serializer
    int_float_tuple_serializer
    float_float_tuple_serializer
    int_float_tuple_alternate_syntax_serializer
    int_string_tuple_serializer
    stream_of_type_variants_serializer
  end

  methods
    function self = SimpleGenericsReader(filename)
      self@test_model.SimpleGenericsReaderBase();
      self@yardl.binary.BinaryProtocolReader(filename, test_model.SimpleGenericsReaderBase.schema);
      self.float_image_serializer = yardl.binary.NDArraySerializer(yardl.binary.Float32Serializer, 2);
      self.int_image_serializer = yardl.binary.NDArraySerializer(yardl.binary.Int32Serializer, 2);
      self.int_image_alternate_syntax_serializer = yardl.binary.NDArraySerializer(yardl.binary.Int32Serializer, 2);
      self.string_image_serializer = yardl.binary.NDArraySerializer(yardl.binary.StringSerializer, 2);
      self.int_float_tuple_serializer = tuples.binary.TupleSerializer(yardl.binary.Int32Serializer, yardl.binary.Float32Serializer);
      self.float_float_tuple_serializer = tuples.binary.TupleSerializer(yardl.binary.Float32Serializer, yardl.binary.Float32Serializer);
      self.int_float_tuple_alternate_syntax_serializer = tuples.binary.TupleSerializer(yardl.binary.Int32Serializer, yardl.binary.Float32Serializer);
      self.int_string_tuple_serializer = tuples.binary.TupleSerializer(yardl.binary.Int32Serializer, yardl.binary.StringSerializer);
      self.stream_of_type_variants_serializer = yardl.binary.StreamSerializer(yardl.binary.UnionSerializer('test_model.ImageFloatOrImageDouble', {yardl.binary.NDArraySerializer(yardl.binary.Float32Serializer, 2), yardl.binary.NDArraySerializer(yardl.binary.Float64Serializer, 2)}, {@test_model.ImageFloatOrImageDouble.ImageFloat, @test_model.ImageFloatOrImageDouble.ImageDouble}));
    end
  end

  methods (Access=protected)
    function value = read_float_image_(self)
      value = self.float_image_serializer.read(self.stream_);
    end

    function value = read_int_image_(self)
      value = self.int_image_serializer.read(self.stream_);
    end

    function value = read_int_image_alternate_syntax_(self)
      value = self.int_image_alternate_syntax_serializer.read(self.stream_);
    end

    function value = read_string_image_(self)
      value = self.string_image_serializer.read(self.stream_);
    end

    function value = read_int_float_tuple_(self)
      value = self.int_float_tuple_serializer.read(self.stream_);
    end

    function value = read_float_float_tuple_(self)
      value = self.float_float_tuple_serializer.read(self.stream_);
    end

    function value = read_int_float_tuple_alternate_syntax_(self)
      value = self.int_float_tuple_alternate_syntax_serializer.read(self.stream_);
    end

    function value = read_int_string_tuple_(self)
      value = self.int_string_tuple_serializer.read(self.stream_);
    end

    function more = has_stream_of_type_variants_(self)
      more = self.stream_of_type_variants_serializer.hasnext(self.stream_);
    end

    function value = read_stream_of_type_variants_(self)
      value = self.stream_of_type_variants_serializer.read(self.stream_);
    end
  end
end
