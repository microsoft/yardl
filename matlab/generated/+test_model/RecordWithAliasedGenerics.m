% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef RecordWithAliasedGenerics < handle
  properties
    my_strings
    aliased_strings
  end

  methods
    function self = RecordWithAliasedGenerics(kwargs)
      arguments
        kwargs.my_strings = tuples.Tuple(v1="", v2="");
        kwargs.aliased_strings = tuples.Tuple(v1="", v2="");
      end
      self.my_strings = kwargs.my_strings;
      self.aliased_strings = kwargs.aliased_strings;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "test_model.RecordWithAliasedGenerics") && ...
        isequal(self.my_strings, other.my_strings) && ...
        isequal(self.aliased_strings, other.aliased_strings);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = test_model.RecordWithAliasedGenerics();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
