% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef RecordWithOptionalFields < handle
  properties
    optional_int
    optional_int_alternate_syntax
    optional_time
  end

  methods
    function self = RecordWithOptionalFields(kwargs)
      arguments
        kwargs.optional_int = yardl.None;
        kwargs.optional_int_alternate_syntax = yardl.None;
        kwargs.optional_time = yardl.None;
      end
      self.optional_int = kwargs.optional_int;
      self.optional_int_alternate_syntax = kwargs.optional_int_alternate_syntax;
      self.optional_time = kwargs.optional_time;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "test_model.RecordWithOptionalFields") && ...
        isequal({self.optional_int}, {other.optional_int}) && ...
        isequal({self.optional_int_alternate_syntax}, {other.optional_int_alternate_syntax}) && ...
        isequal({self.optional_time}, {other.optional_time});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = test_model.RecordWithOptionalFields();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
