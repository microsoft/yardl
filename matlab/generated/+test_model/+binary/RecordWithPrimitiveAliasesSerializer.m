% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef RecordWithPrimitiveAliasesSerializer < yardl.binary.RecordSerializer
  methods
    function self = RecordWithPrimitiveAliasesSerializer()
      field_serializers{1} = yardl.binary.Uint8Serializer;
      field_serializers{2} = yardl.binary.Int32Serializer;
      field_serializers{3} = yardl.binary.Uint32Serializer;
      field_serializers{4} = yardl.binary.Int64Serializer;
      field_serializers{5} = yardl.binary.Uint64Serializer;
      field_serializers{6} = yardl.binary.Float32Serializer;
      field_serializers{7} = yardl.binary.Float64Serializer;
      field_serializers{8} = yardl.binary.Complexfloat32Serializer;
      field_serializers{9} = yardl.binary.Complexfloat64Serializer;
      self@yardl.binary.RecordSerializer('test_model.RecordWithPrimitiveAliases', field_serializers);
    end

    function write(self, outstream, value)
      arguments
        self
        outstream (1,1) yardl.binary.CodedOutputStream
        value (1,1) test_model.RecordWithPrimitiveAliases
      end
      self.write_(outstream, value.byte_field, value.int_field, value.uint_field, value.long_field, value.ulong_field, value.float_field, value.double_field, value.complexfloat_field, value.complexdouble_field);
    end

    function value = read(self, instream)
      fields = self.read_(instream);
      value = test_model.RecordWithPrimitiveAliases(byte_field=fields{1}, int_field=fields{2}, uint_field=fields{3}, long_field=fields{4}, ulong_field=fields{5}, float_field=fields{6}, double_field=fields{7}, complexfloat_field=fields{8}, complexdouble_field=fields{9});
    end
  end
end
