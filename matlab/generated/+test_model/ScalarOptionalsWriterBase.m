% This file was generated by the "yardl" tool. DO NOT EDIT.

% Abstract writer for protocol ScalarOptionals
classdef (Abstract) ScalarOptionalsWriterBase < handle
  properties (Access=protected)
    state_
  end

  methods
    function self = ScalarOptionalsWriterBase()
      self.state_ = 0;
    end

    function close(self)
      self.close_();
      if self.state_ ~= 4
        expected_method = self.state_to_method_name_(self.state_);
        throw(yardl.ProtocolError("Protocol writer closed before all steps were called. Expected call to '%s'.", expected_method));
      end
    end

    % Ordinal 0
    function write_optional_int(self, value)
      if self.state_ ~= 0
        self.raise_unexpected_state_(0);
      end

      self.write_optional_int_(value);
      self.state_ = 1;
    end

    % Ordinal 1
    function write_optional_record(self, value)
      if self.state_ ~= 1
        self.raise_unexpected_state_(1);
      end

      self.write_optional_record_(value);
      self.state_ = 2;
    end

    % Ordinal 2
    function write_record_with_optional_fields(self, value)
      if self.state_ ~= 2
        self.raise_unexpected_state_(2);
      end

      self.write_record_with_optional_fields_(value);
      self.state_ = 3;
    end

    % Ordinal 3
    function write_optional_record_with_optional_fields(self, value)
      if self.state_ ~= 3
        self.raise_unexpected_state_(3);
      end

      self.write_optional_record_with_optional_fields_(value);
      self.state_ = 4;
    end
  end

  methods (Static)
    function res = schema()
      res = string('{"protocol":{"name":"ScalarOptionals","sequence":[{"name":"optionalInt","type":[null,"int32"]},{"name":"optionalRecord","type":[null,"TestModel.SimpleRecord"]},{"name":"recordWithOptionalFields","type":"TestModel.RecordWithOptionalFields"},{"name":"optionalRecordWithOptionalFields","type":[null,"TestModel.RecordWithOptionalFields"]}]},"types":[{"name":"RecordWithOptionalFields","fields":[{"name":"optionalInt","type":[null,"int32"]},{"name":"optionalIntAlternateSyntax","type":[null,"int32"]},{"name":"optionalTime","type":[null,"time"]}]},{"name":"SimpleRecord","fields":[{"name":"x","type":"int32"},{"name":"y","type":"int32"},{"name":"z","type":"int32"}]}]}');
    end
  end

  methods (Abstract, Access=protected)
    write_optional_int_(self, value)
    write_optional_record_(self, value)
    write_record_with_optional_fields_(self, value)
    write_optional_record_with_optional_fields_(self, value)

    end_stream_(self)
    close_(self)
  end

  methods (Access=private)
    function raise_unexpected_state_(self, actual)
      expected_method = self.state_to_method_name_(self.state_);
      actual_method = self.state_to_method_name_(actual);
      throw(yardl.ProtocolError("Expected call to '%s' but received call to '%s'", expected_method, actual_method));
    end

    function name = state_to_method_name_(self, state)
      if state == 0
        name = "write_optional_int";
      elseif state == 1
        name = "write_optional_record";
      elseif state == 2
        name = "write_record_with_optional_fields";
      elseif state == 3
        name = "write_optional_record_with_optional_fields";
      else
        name = '<unknown>';
      end
    end
  end
end
