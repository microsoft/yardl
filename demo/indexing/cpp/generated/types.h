// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <unordered_map>
#include <variant>
#include <vector>

#include "yardl/yardl.h"

namespace sketch {
struct Header {
  std::string subject{};

  bool operator==(const Header& other) const {
    return subject == other.subject;
  }

  bool operator!=(const Header& other) const {
    return !(*this == other);
  }
};

struct Sample {
  uint32_t id{};
  std::vector<int32_t> data{};

  bool operator==(const Sample& other) const {
    return id == other.id &&
      data == other.data;
  }

  bool operator!=(const Sample& other) const {
    return !(*this == other);
  }
};

} // namespace sketch

