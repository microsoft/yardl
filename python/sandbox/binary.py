# This file was generated by the "yardl" tool. DO NOT EDIT.

# pyright: reportUnusedClass=false

import collections.abc
import datetime
import io
import typing
import numpy as np
import numpy.typing as npt

from . import *
from . import _binary
from . import yardl_types as yardl

class _PointDescriptor(_binary.RecordDescriptor[Point]):
    def __init__(self) -> None:
        super().__init__([("x", _binary.int32_descriptor), ("y", _binary.int32_descriptor)])

    def write(self, stream: _binary.CodedOutputStream, value: Point) -> None:
        self._write(stream, value.x, value.y)

    def read(self, stream: _binary.CodedInputStream) -> Point:
        field_values = self._read(stream)
        return Point(x=field_values[0], y=field_values[1])


class BinaryP1Writer(P1WriterBase, _binary.BinaryProtocolWriter):
    """Binary writer for the P1 protocol."""

    def __init__(self, stream: typing.BinaryIO | str) -> None:
        P1WriterBase.__init__(self)
        _binary.BinaryProtocolWriter.__init__(self, stream, P1WriterBase.schema)

    def _write_my_value(self, value: Point) -> None:
        _PointDescriptor().write(self._stream, value)


class BinaryP1Reader(P1ReaderBase, _binary.BinaryProtocolReader):
    """Binary writer for the P1 protocol."""

    def __init__(self, stream: io.BufferedReader | str) -> None:
        P1ReaderBase.__init__(self)
        _binary.BinaryProtocolReader.__init__(self, stream, P1ReaderBase.schema)

    def _read_my_value(self) -> Point:
        return _PointDescriptor().read(self._stream)

