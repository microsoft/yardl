% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef BinaryTree < handle
  properties
    value
    left
    right
  end

  methods
    function self = BinaryTree(kwargs)
      arguments
        kwargs.value = int32(0);
        kwargs.left = yardl.None;
        kwargs.right = yardl.None;
      end
      self.value = kwargs.value;
      self.left = kwargs.left;
      self.right = kwargs.right;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "sketch.BinaryTree") && ...
        isequal(self.value, other.value) && ...
        isequal(self.left, other.left) && ...
        isequal(self.right, other.right);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = sketch.BinaryTree();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
