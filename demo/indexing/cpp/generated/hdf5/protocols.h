// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../yardl/detail/hdf5/io.h"

namespace sketch::hdf5 {
// HDF5 writer for the MyProtocol protocol.
class MyProtocolWriter : public sketch::MyProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  MyProtocolWriter(std::string path);

  protected:
  void WriteHeaderImpl(sketch::Header const& value) override;

  void WriteSamplesImpl(sketch::Sample const& value) override;

  void WriteSamplesImpl(std::vector<sketch::Sample> const& values) override;

  void EndSamplesImpl() override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> samples_dataset_state_;
};

// HDF5 reader for the MyProtocol protocol.
class MyProtocolReader : public sketch::MyProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  MyProtocolReader(std::string path);

  void ReadHeaderImpl(sketch::Header& value) override;

  bool ReadSamplesImpl(sketch::Sample& value) override;

  bool ReadSamplesImpl(std::vector<sketch::Sample>& values) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> samples_dataset_state_;
};

} // namespace sketch

