% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MockFixedVectorsWriter < matlab.mixin.Copyable & test_model.FixedVectorsWriterBase
  properties
    testCase_
    expected_fixed_int_vector
    expected_fixed_simple_record_vector
    expected_fixed_record_with_vlens_vector
    expected_record_with_fixed_vectors
  end

  methods
    function self = MockFixedVectorsWriter(testCase)
      self.testCase_ = testCase;
      self.expected_fixed_int_vector = yardl.None;
      self.expected_fixed_simple_record_vector = yardl.None;
      self.expected_fixed_record_with_vlens_vector = yardl.None;
      self.expected_record_with_fixed_vectors = yardl.None;
    end

    function expect_write_fixed_int_vector_(self, value)
      self.expected_fixed_int_vector = yardl.Optional(value);
    end

    function expect_write_fixed_simple_record_vector_(self, value)
      self.expected_fixed_simple_record_vector = yardl.Optional(value);
    end

    function expect_write_fixed_record_with_vlens_vector_(self, value)
      self.expected_fixed_record_with_vlens_vector = yardl.Optional(value);
    end

    function expect_write_record_with_fixed_vectors_(self, value)
      self.expected_record_with_fixed_vectors = yardl.Optional(value);
    end

    function verify(self)
      self.testCase_.verifyEqual(self.expected_fixed_int_vector, yardl.None, "Expected call to write_fixed_int_vector_ was not received");
      self.testCase_.verifyEqual(self.expected_fixed_simple_record_vector, yardl.None, "Expected call to write_fixed_simple_record_vector_ was not received");
      self.testCase_.verifyEqual(self.expected_fixed_record_with_vlens_vector, yardl.None, "Expected call to write_fixed_record_with_vlens_vector_ was not received");
      self.testCase_.verifyEqual(self.expected_record_with_fixed_vectors, yardl.None, "Expected call to write_record_with_fixed_vectors_ was not received");
    end
  end

  methods (Access=protected)
    function write_fixed_int_vector_(self, value)
      self.testCase_.verifyTrue(self.expected_fixed_int_vector.has_value(), "Unexpected call to write_fixed_int_vector_");
      self.testCase_.verifyEqual(value, self.expected_fixed_int_vector.value, "Unexpected argument value for call to write_fixed_int_vector_");
      self.expected_fixed_int_vector = yardl.None;
    end

    function write_fixed_simple_record_vector_(self, value)
      self.testCase_.verifyTrue(self.expected_fixed_simple_record_vector.has_value(), "Unexpected call to write_fixed_simple_record_vector_");
      self.testCase_.verifyEqual(value, self.expected_fixed_simple_record_vector.value, "Unexpected argument value for call to write_fixed_simple_record_vector_");
      self.expected_fixed_simple_record_vector = yardl.None;
    end

    function write_fixed_record_with_vlens_vector_(self, value)
      self.testCase_.verifyTrue(self.expected_fixed_record_with_vlens_vector.has_value(), "Unexpected call to write_fixed_record_with_vlens_vector_");
      self.testCase_.verifyEqual(value, self.expected_fixed_record_with_vlens_vector.value, "Unexpected argument value for call to write_fixed_record_with_vlens_vector_");
      self.expected_fixed_record_with_vlens_vector = yardl.None;
    end

    function write_record_with_fixed_vectors_(self, value)
      self.testCase_.verifyTrue(self.expected_record_with_fixed_vectors.has_value(), "Unexpected call to write_record_with_fixed_vectors_");
      self.testCase_.verifyEqual(value, self.expected_record_with_fixed_vectors.value, "Unexpected argument value for call to write_record_with_fixed_vectors_");
      self.expected_record_with_fixed_vectors = yardl.None;
    end

    function close_(self)
    end
    function end_stream_(self)
    end
  end
end
