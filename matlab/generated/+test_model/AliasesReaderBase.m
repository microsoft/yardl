% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef AliasesReaderBase < handle
  properties (Access=protected)
    state_
  end

  methods
    function self = AliasesReaderBase()
      self.state_ = 0;
    end

    function close(self)
      self.close_();
      if self.state_ ~= 11
        expected_method = self.state_to_method_name_(self.state_);
        throw(yardl.ProtocolError("Protocol reader closed before all data was consumed. Expected call to '%s'.", expected_method));
      end
    end

    % Ordinal 0
    function value = read_aliased_string(self)
      if self.state_ ~= 0
        self.raise_unexpected_state_(0);
      end

      value = self.read_aliased_string_();
      self.state_ = 1;
    end

    % Ordinal 1
    function value = read_aliased_enum(self)
      if self.state_ ~= 1
        self.raise_unexpected_state_(1);
      end

      value = self.read_aliased_enum_();
      self.state_ = 2;
    end

    % Ordinal 2
    function value = read_aliased_open_generic(self)
      if self.state_ ~= 2
        self.raise_unexpected_state_(2);
      end

      value = self.read_aliased_open_generic_();
      self.state_ = 3;
    end

    % Ordinal 3
    function value = read_aliased_closed_generic(self)
      if self.state_ ~= 3
        self.raise_unexpected_state_(3);
      end

      value = self.read_aliased_closed_generic_();
      self.state_ = 4;
    end

    % Ordinal 4
    function value = read_aliased_optional(self)
      if self.state_ ~= 4
        self.raise_unexpected_state_(4);
      end

      value = self.read_aliased_optional_();
      self.state_ = 5;
    end

    % Ordinal 5
    function value = read_aliased_generic_optional(self)
      if self.state_ ~= 5
        self.raise_unexpected_state_(5);
      end

      value = self.read_aliased_generic_optional_();
      self.state_ = 6;
    end

    % Ordinal 6
    function value = read_aliased_generic_union_2(self)
      if self.state_ ~= 6
        self.raise_unexpected_state_(6);
      end

      value = self.read_aliased_generic_union_2_();
      self.state_ = 7;
    end

    % Ordinal 7
    function value = read_aliased_generic_vector(self)
      if self.state_ ~= 7
        self.raise_unexpected_state_(7);
      end

      value = self.read_aliased_generic_vector_();
      self.state_ = 8;
    end

    % Ordinal 8
    function value = read_aliased_generic_fixed_vector(self)
      if self.state_ ~= 8
        self.raise_unexpected_state_(8);
      end

      value = self.read_aliased_generic_fixed_vector_();
      self.state_ = 9;
    end

    % Ordinal 9
    function more = has_stream_of_aliased_generic_union_2(self)
      if self.state_ ~= 9
        self.raise_unexpected_state_(9);
      end

      more = self.has_stream_of_aliased_generic_union_2_();
      if ~more
        self.state_ = 10;
      end
    end

    function value = read_stream_of_aliased_generic_union_2(self)
      if self.state_ ~= 9
        self.raise_unexpected_state_(9);
      end

      value = self.read_stream_of_aliased_generic_union_2_();
    end

    % Ordinal 10
    function value = read_vectors(self)
      if self.state_ ~= 10
        self.raise_unexpected_state_(10);
      end

      value = self.read_vectors_();
      self.state_ = 11;
    end

    function copy_to(self, writer)
      writer.write_aliased_string(self.read_aliased_string());
      writer.write_aliased_enum(self.read_aliased_enum());
      writer.write_aliased_open_generic(self.read_aliased_open_generic());
      writer.write_aliased_closed_generic(self.read_aliased_closed_generic());
      writer.write_aliased_optional(self.read_aliased_optional());
      writer.write_aliased_generic_optional(self.read_aliased_generic_optional());
      writer.write_aliased_generic_union_2(self.read_aliased_generic_union_2());
      writer.write_aliased_generic_vector(self.read_aliased_generic_vector());
      writer.write_aliased_generic_fixed_vector(self.read_aliased_generic_fixed_vector());
      while self.has_stream_of_aliased_generic_union_2()
        item = self.read_stream_of_aliased_generic_union_2();
        writer.write_stream_of_aliased_generic_union_2({item});
      end
      writer.end_stream_of_aliased_generic_union_2();
      writer.write_vectors(self.read_vectors());
    end
  end

  methods (Static)
    function res = schema()
      res = test_model.AliasesWriterBase.schema;
    end
  end

  methods (Abstract, Access=protected)
    read_aliased_string_(self)
    read_aliased_enum_(self)
    read_aliased_open_generic_(self)
    read_aliased_closed_generic_(self)
    read_aliased_optional_(self)
    read_aliased_generic_optional_(self)
    read_aliased_generic_union_2_(self)
    read_aliased_generic_vector_(self)
    read_aliased_generic_fixed_vector_(self)
    has_stream_of_aliased_generic_union_2_(self)
    read_stream_of_aliased_generic_union_2_(self)
    read_vectors_(self)

    close_(self)
  end

  methods (Access=private)
    function raise_unexpected_state_(self, actual)
      actual_method = self.state_to_method_name_(actual);
      expected_method = self.state_to_method_name_(self.state_);
      throw(yardl.ProtocolError("Expected call to '%s' but received call to '%s'.", expected_method, actual_method));
    end

    function name = state_to_method_name_(self, state)
      if state == 0
        name = "read_aliased_string";
      elseif state == 1
        name = "read_aliased_enum";
      elseif state == 2
        name = "read_aliased_open_generic";
      elseif state == 3
        name = "read_aliased_closed_generic";
      elseif state == 4
        name = "read_aliased_optional";
      elseif state == 5
        name = "read_aliased_generic_optional";
      elseif state == 6
        name = "read_aliased_generic_union_2";
      elseif state == 7
        name = "read_aliased_generic_vector";
      elseif state == 8
        name = "read_aliased_generic_fixed_vector";
      elseif state == 9
        name = "read_stream_of_aliased_generic_union_2";
      elseif state == 10
        name = "read_vectors";
      else
        name = "<unknown>";
      end
    end
  end
end
