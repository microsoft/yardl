% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MockMapsWriter < matlab.mixin.Copyable & test_model.MapsWriterBase
  properties
    testCase_
    expected_string_to_int
    expected_int_to_string
    expected_string_to_union
    expected_aliased_generic
    expected_records
  end

  methods
    function self = MockMapsWriter(testCase)
      self.testCase_ = testCase;
      self.expected_string_to_int = yardl.None;
      self.expected_int_to_string = yardl.None;
      self.expected_string_to_union = yardl.None;
      self.expected_aliased_generic = yardl.None;
      self.expected_records = yardl.None;
    end

    function expect_write_string_to_int_(self, value)
      self.expected_string_to_int = yardl.Optional(value);
    end

    function expect_write_int_to_string_(self, value)
      self.expected_int_to_string = yardl.Optional(value);
    end

    function expect_write_string_to_union_(self, value)
      self.expected_string_to_union = yardl.Optional(value);
    end

    function expect_write_aliased_generic_(self, value)
      self.expected_aliased_generic = yardl.Optional(value);
    end

    function expect_write_records_(self, value)
      self.expected_records = yardl.Optional(value);
    end

    function verify(self)
      self.testCase_.verifyEqual(self.expected_string_to_int, yardl.None, "Expected call to write_string_to_int_ was not received");
      self.testCase_.verifyEqual(self.expected_int_to_string, yardl.None, "Expected call to write_int_to_string_ was not received");
      self.testCase_.verifyEqual(self.expected_string_to_union, yardl.None, "Expected call to write_string_to_union_ was not received");
      self.testCase_.verifyEqual(self.expected_aliased_generic, yardl.None, "Expected call to write_aliased_generic_ was not received");
      self.testCase_.verifyEqual(self.expected_records, yardl.None, "Expected call to write_records_ was not received");
    end
  end

  methods (Access=protected)
    function write_string_to_int_(self, value)
      self.testCase_.verifyTrue(self.expected_string_to_int.has_value(), "Unexpected call to write_string_to_int_");
      self.testCase_.verifyEqual(value, self.expected_string_to_int.value, "Unexpected argument value for call to write_string_to_int_");
      self.expected_string_to_int = yardl.None;
    end

    function write_int_to_string_(self, value)
      self.testCase_.verifyTrue(self.expected_int_to_string.has_value(), "Unexpected call to write_int_to_string_");
      self.testCase_.verifyEqual(value, self.expected_int_to_string.value, "Unexpected argument value for call to write_int_to_string_");
      self.expected_int_to_string = yardl.None;
    end

    function write_string_to_union_(self, value)
      self.testCase_.verifyTrue(self.expected_string_to_union.has_value(), "Unexpected call to write_string_to_union_");
      self.testCase_.verifyEqual(value, self.expected_string_to_union.value, "Unexpected argument value for call to write_string_to_union_");
      self.expected_string_to_union = yardl.None;
    end

    function write_aliased_generic_(self, value)
      self.testCase_.verifyTrue(self.expected_aliased_generic.has_value(), "Unexpected call to write_aliased_generic_");
      self.testCase_.verifyEqual(value, self.expected_aliased_generic.value, "Unexpected argument value for call to write_aliased_generic_");
      self.expected_aliased_generic = yardl.None;
    end

    function write_records_(self, value)
      self.testCase_.verifyTrue(self.expected_records.has_value(), "Unexpected call to write_records_");
      self.testCase_.verifyEqual(value, self.expected_records.value, "Unexpected argument value for call to write_records_");
      self.expected_records = yardl.None;
    end

    function close_(self)
    end
    function end_stream_(self)
    end
  end
end
