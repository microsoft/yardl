% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef RecordWithKeywordFields < handle
  properties
    int
    sizeof
    if_
  end

  methods
    function self = RecordWithKeywordFields(kwargs)
      arguments
        kwargs.int = "";
        kwargs.sizeof = int32.empty();
        kwargs.if_;
      end
      self.int = kwargs.int;
      self.sizeof = kwargs.sizeof;
      if ~isfield(kwargs, "if_")
        throw(yardl.TypeError("Missing required keyword argument 'if_'"))
      end
      self.if_ = kwargs.if_;
    end

    function res = float(self)
      res = self.int;
      return
    end

    function res = double(self)
      res = self.float();
      return
    end

    function res = return_(self)
      res = self.sizeof(1+2, 1+1);
      return
    end


    function res = eq(self, other)
      res = ...
        isa(other, "test_model.RecordWithKeywordFields") && ...
        isequal({self.int}, {other.int}) && ...
        isequal({self.sizeof}, {other.sizeof}) && ...
        isequal({self.if_}, {other.if_});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = test_model.RecordWithKeywordFields(if_=yardl.None);
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
