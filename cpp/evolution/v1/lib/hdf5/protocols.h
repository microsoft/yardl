// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../types.h"
#include "../yardl/detail/hdf5/io.h"

namespace evo_test::hdf5 {
// HDF5 writer for the ProtocolWithChanges protocol.
class ProtocolWithChangesWriter : public evo_test::ProtocolWithChangesWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  ProtocolWithChangesWriter(std::string path);

  protected:
  void WriteInt8ToIntImpl(int32_t const& value) override;

  void WriteInt8ToLongImpl(int64_t const& value) override;

  void WriteInt8ToUintImpl(uint32_t const& value) override;

  void WriteInt8ToUlongImpl(uint64_t const& value) override;

  void WriteInt8ToFloatImpl(float const& value) override;

  void WriteInt8ToDoubleImpl(double const& value) override;

  void WriteIntToUintImpl(uint32_t const& value) override;

  void WriteIntToLongImpl(int64_t const& value) override;

  void WriteIntToFloatImpl(float const& value) override;

  void WriteIntToDoubleImpl(double const& value) override;

  void WriteUintToUlongImpl(uint64_t const& value) override;

  void WriteUintToFloatImpl(float const& value) override;

  void WriteUintToDoubleImpl(double const& value) override;

  void WriteFloatToDoubleImpl(double const& value) override;

  void WriteIntToStringImpl(std::string const& value) override;

  void WriteUintToStringImpl(std::string const& value) override;

  void WriteLongToStringImpl(std::string const& value) override;

  void WriteUlongToStringImpl(std::string const& value) override;

  void WriteFloatToStringImpl(std::string const& value) override;

  void WriteDoubleToStringImpl(std::string const& value) override;

  void WriteIntToOptionalImpl(std::optional<int32_t> const& value) override;

  void WriteFloatToOptionalImpl(std::optional<float> const& value) override;

  void WriteStringToOptionalImpl(std::optional<std::string> const& value) override;

  void WriteIntToUnionImpl(std::variant<int32_t, bool> const& value) override;

  void WriteFloatToUnionImpl(std::variant<float, bool> const& value) override;

  void WriteStringToUnionImpl(std::variant<std::string, bool> const& value) override;

  void WriteOptionalIntToFloatImpl(std::optional<float> const& value) override;

  void WriteOptionalFloatToStringImpl(std::optional<std::string> const& value) override;

  void WriteAliasedLongToStringImpl(evo_test::AliasedLongToString const& value) override;

  void WriteStringToAliasedStringImpl(evo_test::AliasedString const& value) override;

  void WriteStringToAliasedIntImpl(evo_test::AliasedInt const& value) override;

  void WriteOptionalIntToUnionImpl(std::variant<std::monostate, int32_t, std::string> const& value) override;

  void WriteOptionalRecordToUnionImpl(std::variant<std::monostate, evo_test::RecordWithChanges, std::string> const& value) override;

  void WriteRecordWithChangesImpl(evo_test::RecordWithChanges const& value) override;

  void WriteAliasedRecordWithChangesImpl(evo_test::AliasedRecordWithChanges const& value) override;

  void WriteRecordToRenamedRecordImpl(evo_test::RenamedRecord const& value) override;

  void WriteRecordToAliasedRecordImpl(evo_test::AliasedRecordWithChanges const& value) override;

  void WriteRecordToAliasedAliasImpl(evo_test::AliasOfAliasedRecordWithChanges const& value) override;

  void WriteOptionalRecordWithChangesImpl(std::optional<evo_test::RecordWithChanges> const& value) override;

  void WriteAliasedOptionalRecordWithChangesImpl(std::optional<evo_test::AliasedRecordWithChanges> const& value) override;

  void WriteUnionRecordWithChangesImpl(std::variant<evo_test::RecordWithChanges, int32_t> const& value) override;

  void WriteUnionWithSameTypesetImpl(std::variant<float, evo_test::RecordWithChanges, std::string, int32_t> const& value) override;

  void WriteUnionWithTypesAddedImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string> const& value) override;

  void WriteUnionWithTypesRemovedImpl(std::variant<evo_test::RecordWithChanges, std::string> const& value) override;

  void WriteRecordToOptionalImpl(std::optional<evo_test::RecordWithChanges> const& value) override;

  void WriteRecordToAliasedOptionalImpl(evo_test::AliasedOptionalRecord const& value) override;

  void WriteRecordToUnionImpl(std::variant<evo_test::RecordWithChanges, std::string> const& value) override;

  void WriteRecordToAliasedUnionImpl(evo_test::AliasedRecordOrString const& value) override;

  void WriteVectorRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges> const& value) override;

  void WriteStreamedRecordWithChangesImpl(evo_test::RecordWithChanges const& value) override;

  void WriteStreamedRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges> const& values) override;

  void EndStreamedRecordWithChangesImpl() override;

  void WriteAddedOptionalImpl(std::optional<evo_test::RecordWithChanges> const& value) override;

  void WriteAddedMapImpl(std::unordered_map<std::string, std::string> const& value) override;

  void WriteAddedRecordStreamImpl(evo_test::RecordWithChanges const& value) override;

  void WriteAddedRecordStreamImpl(std::vector<evo_test::RecordWithChanges> const& values) override;

  void EndAddedRecordStreamImpl() override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> streamedRecordWithChanges_dataset_state_;
  std::unique_ptr<yardl::hdf5::DatasetWriter> addedRecordStream_dataset_state_;
};

// HDF5 reader for the ProtocolWithChanges protocol.
class ProtocolWithChangesReader : public evo_test::ProtocolWithChangesReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  ProtocolWithChangesReader(std::string path);

  void ReadInt8ToIntImpl(int32_t& value) override;

  void ReadInt8ToLongImpl(int64_t& value) override;

  void ReadInt8ToUintImpl(uint32_t& value) override;

  void ReadInt8ToUlongImpl(uint64_t& value) override;

  void ReadInt8ToFloatImpl(float& value) override;

  void ReadInt8ToDoubleImpl(double& value) override;

  void ReadIntToUintImpl(uint32_t& value) override;

  void ReadIntToLongImpl(int64_t& value) override;

  void ReadIntToFloatImpl(float& value) override;

  void ReadIntToDoubleImpl(double& value) override;

  void ReadUintToUlongImpl(uint64_t& value) override;

  void ReadUintToFloatImpl(float& value) override;

  void ReadUintToDoubleImpl(double& value) override;

  void ReadFloatToDoubleImpl(double& value) override;

  void ReadIntToStringImpl(std::string& value) override;

  void ReadUintToStringImpl(std::string& value) override;

  void ReadLongToStringImpl(std::string& value) override;

  void ReadUlongToStringImpl(std::string& value) override;

  void ReadFloatToStringImpl(std::string& value) override;

  void ReadDoubleToStringImpl(std::string& value) override;

  void ReadIntToOptionalImpl(std::optional<int32_t>& value) override;

  void ReadFloatToOptionalImpl(std::optional<float>& value) override;

  void ReadStringToOptionalImpl(std::optional<std::string>& value) override;

  void ReadIntToUnionImpl(std::variant<int32_t, bool>& value) override;

  void ReadFloatToUnionImpl(std::variant<float, bool>& value) override;

  void ReadStringToUnionImpl(std::variant<std::string, bool>& value) override;

  void ReadOptionalIntToFloatImpl(std::optional<float>& value) override;

  void ReadOptionalFloatToStringImpl(std::optional<std::string>& value) override;

  void ReadAliasedLongToStringImpl(evo_test::AliasedLongToString& value) override;

  void ReadStringToAliasedStringImpl(evo_test::AliasedString& value) override;

  void ReadStringToAliasedIntImpl(evo_test::AliasedInt& value) override;

  void ReadOptionalIntToUnionImpl(std::variant<std::monostate, int32_t, std::string>& value) override;

  void ReadOptionalRecordToUnionImpl(std::variant<std::monostate, evo_test::RecordWithChanges, std::string>& value) override;

  void ReadRecordWithChangesImpl(evo_test::RecordWithChanges& value) override;

  void ReadAliasedRecordWithChangesImpl(evo_test::AliasedRecordWithChanges& value) override;

  void ReadRecordToRenamedRecordImpl(evo_test::RenamedRecord& value) override;

  void ReadRecordToAliasedRecordImpl(evo_test::AliasedRecordWithChanges& value) override;

  void ReadRecordToAliasedAliasImpl(evo_test::AliasOfAliasedRecordWithChanges& value) override;

  void ReadOptionalRecordWithChangesImpl(std::optional<evo_test::RecordWithChanges>& value) override;

  void ReadAliasedOptionalRecordWithChangesImpl(std::optional<evo_test::AliasedRecordWithChanges>& value) override;

  void ReadUnionRecordWithChangesImpl(std::variant<evo_test::RecordWithChanges, int32_t>& value) override;

  void ReadUnionWithSameTypesetImpl(std::variant<float, evo_test::RecordWithChanges, std::string, int32_t>& value) override;

  void ReadUnionWithTypesAddedImpl(std::variant<evo_test::RecordWithChanges, int32_t, float, std::string>& value) override;

  void ReadUnionWithTypesRemovedImpl(std::variant<evo_test::RecordWithChanges, std::string>& value) override;

  void ReadRecordToOptionalImpl(std::optional<evo_test::RecordWithChanges>& value) override;

  void ReadRecordToAliasedOptionalImpl(evo_test::AliasedOptionalRecord& value) override;

  void ReadRecordToUnionImpl(std::variant<evo_test::RecordWithChanges, std::string>& value) override;

  void ReadRecordToAliasedUnionImpl(evo_test::AliasedRecordOrString& value) override;

  void ReadVectorRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges>& value) override;

  bool ReadStreamedRecordWithChangesImpl(evo_test::RecordWithChanges& value) override;

  bool ReadStreamedRecordWithChangesImpl(std::vector<evo_test::RecordWithChanges>& values) override;

  void ReadAddedOptionalImpl(std::optional<evo_test::RecordWithChanges>& value) override;

  void ReadAddedMapImpl(std::unordered_map<std::string, std::string>& value) override;

  bool ReadAddedRecordStreamImpl(evo_test::RecordWithChanges& value) override;

  bool ReadAddedRecordStreamImpl(std::vector<evo_test::RecordWithChanges>& values) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> streamedRecordWithChanges_dataset_state_;
  std::unique_ptr<yardl::hdf5::DatasetReader> addedRecordStream_dataset_state_;
};

// HDF5 writer for the UnusedProtocol protocol.
class UnusedProtocolWriter : public evo_test::UnusedProtocolWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  UnusedProtocolWriter(std::string path);

  protected:
  void WriteRecordsImpl(evo_test::UnchangedRecord const& value) override;

  void WriteRecordsImpl(std::vector<evo_test::UnchangedRecord> const& values) override;

  void EndRecordsImpl() override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetWriter> records_dataset_state_;
};

// HDF5 reader for the UnusedProtocol protocol.
class UnusedProtocolReader : public evo_test::UnusedProtocolReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  UnusedProtocolReader(std::string path);

  bool ReadRecordsImpl(evo_test::UnchangedRecord& value) override;

  bool ReadRecordsImpl(std::vector<evo_test::UnchangedRecord>& values) override;

  private:
  std::unique_ptr<yardl::hdf5::DatasetReader> records_dataset_state_;
};

} // namespace evo_test

