% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef MockFixedArraysWriter < matlab.mixin.Copyable & test_model.FixedArraysWriterBase
  properties
    testCase_
    expected_ints
    expected_fixed_simple_record_array
    expected_fixed_record_with_vlens_array
    expected_record_with_fixed_arrays
    expected_named_array
  end

  methods
    function obj = MockFixedArraysWriter(testCase)
      obj.testCase_ = testCase;
      obj.expected_ints = yardl.None;
      obj.expected_fixed_simple_record_array = yardl.None;
      obj.expected_fixed_record_with_vlens_array = yardl.None;
      obj.expected_record_with_fixed_arrays = yardl.None;
      obj.expected_named_array = yardl.None;
    end

    function expect_write_ints_(obj, value)
      obj.expected_ints = yardl.Optional(value);
    end

    function expect_write_fixed_simple_record_array_(obj, value)
      obj.expected_fixed_simple_record_array = yardl.Optional(value);
    end

    function expect_write_fixed_record_with_vlens_array_(obj, value)
      obj.expected_fixed_record_with_vlens_array = yardl.Optional(value);
    end

    function expect_write_record_with_fixed_arrays_(obj, value)
      obj.expected_record_with_fixed_arrays = yardl.Optional(value);
    end

    function expect_write_named_array_(obj, value)
      obj.expected_named_array = yardl.Optional(value);
    end

    function verify(obj)
      obj.testCase_.verifyEqual(obj.expected_ints, yardl.None, "Expected call to write_ints_ was not received");
      obj.testCase_.verifyEqual(obj.expected_fixed_simple_record_array, yardl.None, "Expected call to write_fixed_simple_record_array_ was not received");
      obj.testCase_.verifyEqual(obj.expected_fixed_record_with_vlens_array, yardl.None, "Expected call to write_fixed_record_with_vlens_array_ was not received");
      obj.testCase_.verifyEqual(obj.expected_record_with_fixed_arrays, yardl.None, "Expected call to write_record_with_fixed_arrays_ was not received");
      obj.testCase_.verifyEqual(obj.expected_named_array, yardl.None, "Expected call to write_named_array_ was not received");
    end
  end

  methods (Access=protected)
    function write_ints_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_ints.has_value(), "Unexpected call to write_ints_");
      obj.testCase_.verifyEqual(value, obj.expected_ints.value, "Unexpected argument value for call to write_ints_");
      obj.expected_ints = yardl.None;
    end

    function write_fixed_simple_record_array_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_fixed_simple_record_array.has_value(), "Unexpected call to write_fixed_simple_record_array_");
      obj.testCase_.verifyEqual(value, obj.expected_fixed_simple_record_array.value, "Unexpected argument value for call to write_fixed_simple_record_array_");
      obj.expected_fixed_simple_record_array = yardl.None;
    end

    function write_fixed_record_with_vlens_array_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_fixed_record_with_vlens_array.has_value(), "Unexpected call to write_fixed_record_with_vlens_array_");
      obj.testCase_.verifyEqual(value, obj.expected_fixed_record_with_vlens_array.value, "Unexpected argument value for call to write_fixed_record_with_vlens_array_");
      obj.expected_fixed_record_with_vlens_array = yardl.None;
    end

    function write_record_with_fixed_arrays_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_record_with_fixed_arrays.has_value(), "Unexpected call to write_record_with_fixed_arrays_");
      obj.testCase_.verifyEqual(value, obj.expected_record_with_fixed_arrays.value, "Unexpected argument value for call to write_record_with_fixed_arrays_");
      obj.expected_record_with_fixed_arrays = yardl.None;
    end

    function write_named_array_(obj, value)
      obj.testCase_.verifyTrue(obj.expected_named_array.has_value(), "Unexpected call to write_named_array_");
      obj.testCase_.verifyEqual(value, obj.expected_named_array.value, "Unexpected argument value for call to write_named_array_");
      obj.expected_named_array = yardl.None;
    end

    function close_(obj)
    end
    function end_stream_(obj)
    end
  end
end
