% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef SimpleEncodingCounters < handle
  properties
    e1
    e2
    slice
    repetition
  end

  methods
    function self = SimpleEncodingCounters(e1, e2, slice, repetition)
      if nargin > 0
        self.e1 = e1;
        self.e2 = e2;
        self.slice = slice;
        self.repetition = repetition;
      else
        self.e1 = yardl.None;
        self.e2 = yardl.None;
        self.slice = yardl.None;
        self.repetition = yardl.None;
      end
    end

    function res = eq(self, other)
      res = ...
        isa(other, "test_model.SimpleEncodingCounters") && ...
        all([self.e1] == [other.e1]) && ...
        all([self.e2] == [other.e2]) && ...
        all([self.slice] == [other.slice]) && ...
        all([self.repetition] == [other.repetition]);
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = test_model.SimpleEncodingCounters();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
