# This file was generated by the "yardl" tool. DO NOT EDIT.

import datetime
import enum
import types
import typing

import numpy as np
import numpy.typing as npt

from .. import yardl_types as yardl
from .. import _dtypes


T1 = typing.TypeVar("T1")
T1_NP = typing.TypeVar("T1_NP", bound=np.generic)
T2 = typing.TypeVar("T2")
T2_NP = typing.TypeVar("T2_NP", bound=np.generic)


class Tuple(typing.Generic[T1, T2]):
    v1: T1
    v2: T2

    def __init__(self, *,
        v1: T1,
        v2: T2,
    ):
        self.v1 = v1
        self.v2 = v2

    def __eq__(self, other: object) -> bool:
        return (
            isinstance(other, Tuple)
            and yardl.structural_equal(self.v1, other.v1)
            and yardl.structural_equal(self.v2, other.v2)
        )

    def __str__(self) -> str:
        return f"Tuple(v1={self.v1}, v2={self.v2})"

    def __repr__(self) -> str:
        return f"Tuple(v1={repr(self.v1)}, v2={repr(self.v2)})"


